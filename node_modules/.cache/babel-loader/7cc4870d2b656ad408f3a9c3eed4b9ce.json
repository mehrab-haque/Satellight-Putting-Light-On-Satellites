{"ast":null,"code":"import { defined } from '../util';\nimport Point from '../geometry/point';\n\nfunction pointAccessor(name) {\n  var fieldName = \"_\" + name;\n  return function (value) {\n    if (defined(value)) {\n      this._observerField(fieldName, Point.create(value));\n\n      this.geometryChange();\n      return this;\n    }\n\n    return this[fieldName];\n  };\n}\n\nfunction definePointAccessors(fn, names) {\n  for (var i = 0; i < names.length; i++) {\n    fn[names[i]] = pointAccessor(names[i]);\n  }\n}\n\nvar withPoints = function (TBase, names) {\n  var result = function (TBase) {\n    function result() {\n      TBase.apply(this, arguments);\n    }\n\n    if (TBase) result.__proto__ = TBase;\n    result.prototype = Object.create(TBase && TBase.prototype);\n    result.prototype.constructor = result;\n    return result;\n  }(TBase);\n\n  definePointAccessors(result.prototype, names);\n  return result;\n};\n\nexport default withPoints;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/node_modules/@progress/kendo-drawing/dist/es/mixins/with-points.js"],"names":["defined","Point","pointAccessor","name","fieldName","value","_observerField","create","geometryChange","definePointAccessors","fn","names","i","length","withPoints","TBase","result","apply","arguments","__proto__","prototype","Object","constructor"],"mappings":"AAAA,SAASA,OAAT,QAAwB,SAAxB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AACzB,MAAIC,SAAS,GAAG,MAAMD,IAAtB;AACA,SAAO,UAASE,KAAT,EAAgB;AACnB,QAAIL,OAAO,CAACK,KAAD,CAAX,EAAoB;AAChB,WAAKC,cAAL,CAAoBF,SAApB,EAA+BH,KAAK,CAACM,MAAN,CAAaF,KAAb,CAA/B;;AACA,WAAKG,cAAL;AACA,aAAO,IAAP;AACH;;AAED,WAAO,KAAKJ,SAAL,CAAP;AACH,GARD;AASH;;AAED,SAASK,oBAAT,CAA8BC,EAA9B,EAAkCC,KAAlC,EAAyC;AACrC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCF,IAAAA,EAAE,CAACC,KAAK,CAACC,CAAD,CAAN,CAAF,GAAeV,aAAa,CAACS,KAAK,CAACC,CAAD,CAAN,CAA5B;AACH;AACJ;;AAED,IAAIE,UAAU,GAAG,UAAUC,KAAV,EAAiBJ,KAAjB,EAAwB;AACrC,MAAIK,MAAM,GAAI,UAAUD,KAAV,EAAiB;AAC3B,aAASC,MAAT,GAAmB;AACfD,MAAAA,KAAK,CAACE,KAAN,CAAY,IAAZ,EAAkBC,SAAlB;AACH;;AAAA,QAAKH,KAAL,EAAaC,MAAM,CAACG,SAAP,GAAmBJ,KAAnB;AACdC,IAAAA,MAAM,CAACI,SAAP,GAAmBC,MAAM,CAACd,MAAP,CAAeQ,KAAK,IAAIA,KAAK,CAACK,SAA9B,CAAnB;AACAJ,IAAAA,MAAM,CAACI,SAAP,CAAiBE,WAAjB,GAA+BN,MAA/B;AAIA,WAAOA,MAAP;AACH,GAVa,CAUZD,KAVY,CAAd;;AAWAN,EAAAA,oBAAoB,CAACO,MAAM,CAACI,SAAR,EAAmBT,KAAnB,CAApB;AAEA,SAAOK,MAAP;AACH,CAfD;;AAiBA,eAAeF,UAAf","sourcesContent":["import { defined } from '../util';\nimport Point from '../geometry/point';\n\nfunction pointAccessor(name) {\n    var fieldName = \"_\" + name;\n    return function(value) {\n        if (defined(value)) {\n            this._observerField(fieldName, Point.create(value));\n            this.geometryChange();\n            return this;\n        }\n\n        return this[fieldName];\n    };\n}\n\nfunction definePointAccessors(fn, names) {\n    for (var i = 0; i < names.length; i++) {\n        fn[names[i]] = pointAccessor(names[i]);\n    }\n}\n\nvar withPoints = function (TBase, names) {\n    var result = (function (TBase) {\n        function result () {\n            TBase.apply(this, arguments);\n        }if ( TBase ) result.__proto__ = TBase;\n        result.prototype = Object.create( TBase && TBase.prototype );\n        result.prototype.constructor = result;\n\n        \n\n        return result;\n    }(TBase));\n    definePointAccessors(result.prototype, names);\n\n    return result;\n};\n\nexport default withPoints;\n"]},"metadata":{},"sourceType":"module"}