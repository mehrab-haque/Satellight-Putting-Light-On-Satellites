{"ast":null,"code":"import { Image, Surface, Path, Text, Group, geometry } from '@progress/kendo-drawing';\nconst {\n  Rect,\n  Point,\n  Size,\n  transform\n} = geometry;\nexport function drawScene(surface, angle) {\n  // Create the square border by drawing a straight path\n  const path = new Path({\n    stroke: {\n      color: \"#000000\",\n      width: 5\n    }\n  });\n  const path2 = new Path({\n    stroke: {\n      color: \"#000000\",\n      width: 5\n    }\n  });\n  const path3 = new Path({\n    stroke: {\n      color: \"#FF0000\",\n      width: 2\n    }\n  });\n  const text1 = new Text('East', new Point(820, 240), {\n    font: 'bold 25px Arial'\n  });\n  const text2 = new Text('West', new Point(210, 240), {\n    font: 'bold 25px Arial'\n  });\n  const text3 = new Text('North', new Point(510, 10), {\n    font: 'bold 25px Arial'\n  });\n  const text4 = new Text('South', new Point(520, 470), {\n    font: 'bold 25px Arial'\n  }); // The path is constructed by using a chain of commands\n\n  path.moveTo(300, 250).lineTo(800, 250).close();\n  path2.moveTo(550, 50).lineTo(550, 450).close();\n  path3.moveTo(550, 250).lineTo(550 + 300 * Math.cos(angle * 3.1416 / 180), 250 - 300 * Math.sin(angle * 3.1416 / 180)).close(); // This rectangle defines the image position and size\n\n  const group = new Group();\n  group.append(path, path2, path3, text1, text2, text3, text4); // Translate the group\n  // Render the group on the surface\n\n  surface.draw(group);\n}","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/src/components/draw-scene.js"],"names":["Image","Surface","Path","Text","Group","geometry","Rect","Point","Size","transform","drawScene","surface","angle","path","stroke","color","width","path2","path3","text1","font","text2","text3","text4","moveTo","lineTo","close","Math","cos","sin","group","append","draw"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,KAArC,EAA4CC,QAA5C,QAA4D,yBAA5D;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA;AAArB,IAAmCJ,QAAzC;AAEA,OAAO,SAASK,SAAT,CAAmBC,OAAnB,EAA2BC,KAA3B,EAAkC;AACrC;AACA,QAAMC,IAAI,GAAG,IAAIX,IAAJ,CAAS;AAClBY,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,SADH;AAEJC,MAAAA,KAAK,EAAE;AAFH;AADU,GAAT,CAAb;AAME,QAAMC,KAAK,GAAG,IAAIf,IAAJ,CAAS;AACrBY,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,SADH;AAEJC,MAAAA,KAAK,EAAE;AAFH;AADa,GAAT,CAAd;AAME,QAAME,KAAK,GAAG,IAAIhB,IAAJ,CAAS;AACvBY,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,SADH;AAEJC,MAAAA,KAAK,EAAE;AAFH;AADe,GAAT,CAAd;AAMR,QAAMG,KAAK,GAAG,IAAIhB,IAAJ,CACV,MADU,EAEV,IAAII,KAAJ,CAAU,GAAV,EAAe,GAAf,CAFU,EAGV;AAAEa,IAAAA,IAAI,EAAE;AAAR,GAHU,CAAd;AAKA,QAAMC,KAAK,GAAG,IAAIlB,IAAJ,CACV,MADU,EAEV,IAAII,KAAJ,CAAU,GAAV,EAAe,GAAf,CAFU,EAGV;AAAEa,IAAAA,IAAI,EAAE;AAAR,GAHU,CAAd;AAKA,QAAME,KAAK,GAAG,IAAInB,IAAJ,CACV,OADU,EAEV,IAAII,KAAJ,CAAU,GAAV,EAAe,EAAf,CAFU,EAGV;AAAEa,IAAAA,IAAI,EAAE;AAAR,GAHU,CAAd;AAKA,QAAMG,KAAK,GAAG,IAAIpB,IAAJ,CACV,OADU,EAEV,IAAII,KAAJ,CAAU,GAAV,EAAc,GAAd,CAFU,EAGV;AAAEa,IAAAA,IAAI,EAAE;AAAR,GAHU,CAAd,CAnCyC,CAyCrC;;AACAP,EAAAA,IAAI,CAACW,MAAL,CAAY,GAAZ,EAAiB,GAAjB,EACKC,MADL,CACY,GADZ,EACgB,GADhB,EAEKC,KAFL;AAGAT,EAAAA,KAAK,CAACO,MAAN,CAAa,GAAb,EAAkB,EAAlB,EACKC,MADL,CACY,GADZ,EACiB,GADjB,EAEKC,KAFL;AAGJR,EAAAA,KAAK,CAACM,MAAN,CAAa,GAAb,EAAiB,GAAjB,EACCC,MADD,CACQ,MAAI,MAAIE,IAAI,CAACC,GAAL,CAAShB,KAAK,GAAC,MAAN,GAAa,GAAtB,CADhB,EAC2C,MAAI,MAAIe,IAAI,CAACE,GAAL,CAASjB,KAAK,GAAC,MAAN,GAAa,GAAtB,CADnD,EAECc,KAFD,GAhDyC,CAmDrC;;AACA,QAAMI,KAAK,GAAG,IAAI1B,KAAJ,EAAd;AACA0B,EAAAA,KAAK,CAACC,MAAN,CAAalB,IAAb,EAAkBI,KAAlB,EAAwBC,KAAxB,EAA8BC,KAA9B,EAAoCE,KAApC,EAA0CC,KAA1C,EAAgDC,KAAhD,EArDqC,CAuDrC;AAGA;;AACAZ,EAAAA,OAAO,CAACqB,IAAR,CAAaF,KAAb;AACH","sourcesContent":["import { Image, Surface, Path, Text, Group, geometry } from '@progress/kendo-drawing';\r\nconst { Rect, Point, Size, transform } = geometry;\r\n\r\nexport function drawScene(surface,angle) {\r\n    // Create the square border by drawing a straight path\r\n    const path = new Path({\r\n        stroke: {\r\n            color: \"#000000\",\r\n            width: 5\r\n        }\r\n    });\r\n      const path2 = new Path({\r\n        stroke: {\r\n            color: \"#000000\",\r\n            width: 5\r\n        }\r\n    });\r\n        const path3 = new Path({\r\n        stroke: {\r\n            color: \"#FF0000\",\r\n            width: 2\r\n        }\r\n    });\r\nconst text1 = new Text(\r\n    'East',\r\n    new Point(820, 240),\r\n    { font: 'bold 25px Arial' }\r\n);\r\nconst text2 = new Text(\r\n    'West',\r\n    new Point(210, 240),\r\n    { font: 'bold 25px Arial' }\r\n);\r\nconst text3 = new Text(\r\n    'North',\r\n    new Point(510, 10),\r\n    { font: 'bold 25px Arial' }\r\n);\r\nconst text4 = new Text(\r\n    'South',\r\n    new Point(520,470 ),\r\n    { font: 'bold 25px Arial' }\r\n);\r\n\r\n    // The path is constructed by using a chain of commands\r\n    path.moveTo(300, 250)\r\n        .lineTo(800,250)\r\n        .close();\r\n    path2.moveTo(550, 50)\r\n        .lineTo(550, 450)\r\n        .close();\r\npath3.moveTo(550,250)\r\n.lineTo(550+300*Math.cos(angle*3.1416/180),250-300*Math.sin(angle*3.1416/180))\r\n.close()\r\n    // This rectangle defines the image position and size\r\n    const group = new Group();\r\n    group.append(path,path2,path3,text1,text2,text3,text4);\r\n\r\n    // Translate the group\r\n\r\n\r\n    // Render the group on the surface\r\n    surface.draw(group);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}