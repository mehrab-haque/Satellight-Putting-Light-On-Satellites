{"ast":null,"code":"import Matrix from '../geometry/matrix';\nimport toMatrix from '../geometry/to-matrix';\nvar IDENTITY_MATRIX_HASH = Matrix.IDENTITY.toString();\n\nvar measurable = function (TBase) {\n  return function (TBase) {\n    function anonymous() {\n      TBase.apply(this, arguments);\n    }\n\n    if (TBase) anonymous.__proto__ = TBase;\n    anonymous.prototype = Object.create(TBase && TBase.prototype);\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.bbox = function bbox(transformation) {\n      var combinedMatrix = toMatrix(this.currentTransform(transformation));\n      var matrixHash = combinedMatrix ? combinedMatrix.toString() : IDENTITY_MATRIX_HASH;\n      var bbox;\n\n      if (this._bboxCache && this._matrixHash === matrixHash) {\n        bbox = this._bboxCache.clone();\n      } else {\n        bbox = this._bbox(combinedMatrix);\n        this._bboxCache = bbox ? bbox.clone() : null;\n        this._matrixHash = matrixHash;\n      }\n\n      var strokeWidth = this.options.get(\"stroke.width\");\n\n      if (strokeWidth && bbox) {\n        bbox.expand(strokeWidth / 2);\n      }\n\n      return bbox;\n    };\n\n    anonymous.prototype.geometryChange = function geometryChange() {\n      delete this._bboxCache;\n      this.trigger(\"geometryChange\", {\n        element: this\n      });\n    };\n\n    return anonymous;\n  }(TBase);\n};\n\nexport default measurable;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/node_modules/@progress/kendo-drawing/dist/es/mixins/measurable.js"],"names":["Matrix","toMatrix","IDENTITY_MATRIX_HASH","IDENTITY","toString","measurable","TBase","anonymous","apply","arguments","__proto__","prototype","Object","create","constructor","bbox","transformation","combinedMatrix","currentTransform","matrixHash","_bboxCache","_matrixHash","clone","_bbox","strokeWidth","options","get","expand","geometryChange","trigger","element"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,IAAIC,oBAAoB,GAAGF,MAAM,CAACG,QAAP,CAAgBC,QAAhB,EAA3B;;AAEA,IAAIC,UAAU,GAAG,UAAUC,KAAV,EAAiB;AAAE,SAC/B,UAAUA,KAAV,EAAiB;AACd,aAASC,SAAT,GAAsB;AAClBD,MAAAA,KAAK,CAACE,KAAN,CAAY,IAAZ,EAAkBC,SAAlB;AACH;;AAED,QAAKH,KAAL,EAAaC,SAAS,CAACG,SAAV,GAAsBJ,KAAtB;AACbC,IAAAA,SAAS,CAACI,SAAV,GAAsBC,MAAM,CAACC,MAAP,CAAeP,KAAK,IAAIA,KAAK,CAACK,SAA9B,CAAtB;AACAJ,IAAAA,SAAS,CAACI,SAAV,CAAoBG,WAApB,GAAkCP,SAAlC;;AAEAA,IAAAA,SAAS,CAACI,SAAV,CAAoBI,IAApB,GAA2B,SAASA,IAAT,CAAeC,cAAf,EAA+B;AACtD,UAAIC,cAAc,GAAGhB,QAAQ,CAAC,KAAKiB,gBAAL,CAAsBF,cAAtB,CAAD,CAA7B;AACA,UAAIG,UAAU,GAAGF,cAAc,GAAGA,cAAc,CAACb,QAAf,EAAH,GAA+BF,oBAA9D;AACA,UAAIa,IAAJ;;AAEA,UAAI,KAAKK,UAAL,IAAmB,KAAKC,WAAL,KAAqBF,UAA5C,EAAwD;AACpDJ,QAAAA,IAAI,GAAG,KAAKK,UAAL,CAAgBE,KAAhB,EAAP;AACH,OAFD,MAEO;AACHP,QAAAA,IAAI,GAAG,KAAKQ,KAAL,CAAWN,cAAX,CAAP;AACA,aAAKG,UAAL,GAAkBL,IAAI,GAAGA,IAAI,CAACO,KAAL,EAAH,GAAkB,IAAxC;AACA,aAAKD,WAAL,GAAmBF,UAAnB;AACH;;AAED,UAAIK,WAAW,GAAG,KAAKC,OAAL,CAAaC,GAAb,CAAiB,cAAjB,CAAlB;;AACA,UAAIF,WAAW,IAAIT,IAAnB,EAAyB;AACrBA,QAAAA,IAAI,CAACY,MAAL,CAAYH,WAAW,GAAG,CAA1B;AACH;;AAED,aAAOT,IAAP;AACH,KAnBD;;AAqBAR,IAAAA,SAAS,CAACI,SAAV,CAAoBiB,cAApB,GAAqC,SAASA,cAAT,GAA2B;AAC5D,aAAO,KAAKR,UAAZ;AACA,WAAKS,OAAL,CAAa,gBAAb,EAA+B;AAC3BC,QAAAA,OAAO,EAAE;AADkB,OAA/B;AAGH,KALD;;AAOA,WAAOvB,SAAP;AACH,GAtCA,CAsCCD,KAtCD,CAD+B;AAwChC,CAxCJ;;AA0CA,eAAeD,UAAf","sourcesContent":["import Matrix from '../geometry/matrix';\nimport toMatrix from '../geometry/to-matrix';\n\nvar IDENTITY_MATRIX_HASH = Matrix.IDENTITY.toString();\n\nvar measurable = function (TBase) { return (\n    (function (TBase) {\n        function anonymous () {\n            TBase.apply(this, arguments);\n        }\n\n        if ( TBase ) anonymous.__proto__ = TBase;\n        anonymous.prototype = Object.create( TBase && TBase.prototype );\n        anonymous.prototype.constructor = anonymous;\n\n        anonymous.prototype.bbox = function bbox (transformation) {\n            var combinedMatrix = toMatrix(this.currentTransform(transformation));\n            var matrixHash = combinedMatrix ? combinedMatrix.toString() : IDENTITY_MATRIX_HASH;\n            var bbox;\n\n            if (this._bboxCache && this._matrixHash === matrixHash) {\n                bbox = this._bboxCache.clone();\n            } else {\n                bbox = this._bbox(combinedMatrix);\n                this._bboxCache = bbox ? bbox.clone() : null;\n                this._matrixHash = matrixHash;\n            }\n\n            var strokeWidth = this.options.get(\"stroke.width\");\n            if (strokeWidth && bbox) {\n                bbox.expand(strokeWidth / 2);\n            }\n\n            return bbox;\n        };\n\n        anonymous.prototype.geometryChange = function geometryChange () {\n            delete this._bboxCache;\n            this.trigger(\"geometryChange\", {\n                element: this\n            });\n        };\n\n        return anonymous;\n    }(TBase))\n); };\n\nexport default measurable;"]},"metadata":{},"sourceType":"module"}