{"ast":null,"code":"import { defined } from '../util';\n\nfunction geometryAccessor(name) {\n  var fieldName = \"_\" + name;\n  return function (value) {\n    if (defined(value)) {\n      this._observerField(fieldName, value);\n\n      this.geometryChange();\n      return this;\n    }\n\n    return this[fieldName];\n  };\n}\n\nfunction defineGeometryAccessors(fn, names) {\n  for (var i = 0; i < names.length; i++) {\n    fn[names[i]] = geometryAccessor(names[i]);\n  }\n}\n\nvar withGeometry = function (TBase, names) {\n  if (names === void 0) names = [\"geometry\"];\n\n  var result = function (TBase) {\n    function result() {\n      TBase.apply(this, arguments);\n    }\n\n    if (TBase) result.__proto__ = TBase;\n    result.prototype = Object.create(TBase && TBase.prototype);\n    result.prototype.constructor = result;\n    return result;\n  }(TBase);\n\n  defineGeometryAccessors(result.prototype, names);\n  return result;\n};\n\nexport default withGeometry;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/node_modules/@progress/kendo-drawing/dist/es/mixins/with-geometry.js"],"names":["defined","geometryAccessor","name","fieldName","value","_observerField","geometryChange","defineGeometryAccessors","fn","names","i","length","withGeometry","TBase","result","apply","arguments","__proto__","prototype","Object","create","constructor"],"mappings":"AAAA,SAASA,OAAT,QAAwB,SAAxB;;AAEA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5B,MAAIC,SAAS,GAAG,MAAMD,IAAtB;AACA,SAAO,UAASE,KAAT,EAAgB;AACnB,QAAIJ,OAAO,CAACI,KAAD,CAAX,EAAoB;AAChB,WAAKC,cAAL,CAAoBF,SAApB,EAA+BC,KAA/B;;AACA,WAAKE,cAAL;AACA,aAAO,IAAP;AACH;;AAED,WAAO,KAAKH,SAAL,CAAP;AACH,GARD;AASH;;AAED,SAASI,uBAAT,CAAiCC,EAAjC,EAAqCC,KAArC,EAA4C;AACxC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCF,IAAAA,EAAE,CAACC,KAAK,CAACC,CAAD,CAAN,CAAF,GAAeT,gBAAgB,CAACQ,KAAK,CAACC,CAAD,CAAN,CAA/B;AACH;AACJ;;AAED,IAAIE,YAAY,GAAG,UAAUC,KAAV,EAAiBJ,KAAjB,EAAwB;AACvC,MAAKA,KAAK,KAAK,KAAK,CAApB,EAAwBA,KAAK,GAAG,CAAE,UAAF,CAAR;;AAExB,MAAIK,MAAM,GAAI,UAAUD,KAAV,EAAiB;AAC3B,aAASC,MAAT,GAAmB;AACfD,MAAAA,KAAK,CAACE,KAAN,CAAY,IAAZ,EAAkBC,SAAlB;AACH;;AAAA,QAAKH,KAAL,EAAaC,MAAM,CAACG,SAAP,GAAmBJ,KAAnB;AACdC,IAAAA,MAAM,CAACI,SAAP,GAAmBC,MAAM,CAACC,MAAP,CAAeP,KAAK,IAAIA,KAAK,CAACK,SAA9B,CAAnB;AACAJ,IAAAA,MAAM,CAACI,SAAP,CAAiBG,WAAjB,GAA+BP,MAA/B;AAIA,WAAOA,MAAP;AACH,GAVa,CAUZD,KAVY,CAAd;;AAWAN,EAAAA,uBAAuB,CAACO,MAAM,CAACI,SAAR,EAAmBT,KAAnB,CAAvB;AAEA,SAAOK,MAAP;AACH,CAjBD;;AAmBA,eAAeF,YAAf","sourcesContent":["import { defined } from '../util';\n\nfunction geometryAccessor(name) {\n    var fieldName = \"_\" + name;\n    return function(value) {\n        if (defined(value)) {\n            this._observerField(fieldName, value);\n            this.geometryChange();\n            return this;\n        }\n\n        return this[fieldName];\n    };\n}\n\nfunction defineGeometryAccessors(fn, names) {\n    for (var i = 0; i < names.length; i++) {\n        fn[names[i]] = geometryAccessor(names[i]);\n    }\n}\n\nvar withGeometry = function (TBase, names) {\n    if ( names === void 0 ) names = [ \"geometry\" ];\n\n    var result = (function (TBase) {\n        function result () {\n            TBase.apply(this, arguments);\n        }if ( TBase ) result.__proto__ = TBase;\n        result.prototype = Object.create( TBase && TBase.prototype );\n        result.prototype.constructor = result;\n\n        \n\n        return result;\n    }(TBase));\n    defineGeometryAccessors(result.prototype, names);\n\n    return result;\n};\n\nexport default withGeometry;\n"]},"metadata":{},"sourceType":"module"}