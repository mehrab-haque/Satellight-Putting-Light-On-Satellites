{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Md. Mehrab Haque\\\\Desktop\\\\satellight\\\\src\\\\components\\\\MapView.js\";\nimport React, { useState, createRef, useRef, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport { getSatelliteInfo } from \"tle.js\";\n\nfunction getNormalizedCoord(coord, zoom) {\n  const y = coord.y;\n  let x = coord.x;\n  const tileRange = 1 << zoom;\n\n  if (y < 0 || y >= tileRange) {\n    return null;\n  }\n\n  if (x < 0 || x >= tileRange) {\n    x = (x % tileRange + tileRange) % tileRange;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n\nconst MapView = forwardRef((props, ref) => {\n  var map, marker, infoWindow, polyLine;\n  const containerRef = useRef();\n  useEffect(() => {\n    map = new window.google.maps.Map(containerRef.current, {\n      center: {\n        lat: 50,\n        lng: 50\n      },\n      zoom: 5,\n      streetViewControl: false,\n      mapTypeControlOptions: {\n        mapTypeIds: [window.google.maps.MapTypeId.ROADMAP, window.google.maps.MapTypeId.HYBRID]\n      }\n    });\n  }, []);\n  useImperativeHandle(ref, () => ({}));\n  useEffect(() => {}, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  });\n});\nexport default MapView;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/src/components/MapView.js"],"names":["React","useState","createRef","useRef","useEffect","forwardRef","useImperativeHandle","getSatelliteInfo","getNormalizedCoord","coord","zoom","y","x","tileRange","MapView","props","ref","map","marker","infoWindow","polyLine","containerRef","window","google","maps","Map","current","center","lat","lng","streetViewControl","mapTypeControlOptions","mapTypeIds","MapTypeId","ROADMAP","HYBRID","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,MAAjC,EAAwCC,SAAxC,EAAkDC,UAAlD,EAA8DC,mBAA9D,QAAwF,OAAxF;AACA,SAASC,gBAAT,QAAiC,QAAjC;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,IAAnC,EAAyC;AACjC,QAAMC,CAAC,GAAGF,KAAK,CAACE,CAAhB;AACA,MAAIC,CAAC,GAAGH,KAAK,CAACG,CAAd;AACA,QAAMC,SAAS,GAAG,KAAKH,IAAvB;;AACA,MAAIC,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAIE,SAAlB,EAA6B;AAC3B,WAAO,IAAP;AACD;;AACD,MAAID,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAIC,SAAlB,EAA6B;AAC3BD,IAAAA,CAAC,GAAG,CAAEA,CAAC,GAAGC,SAAL,GAAkBA,SAAnB,IAAgCA,SAApC;AACD;;AACD,SAAO;AACLD,IAAAA,CAAC,EAAEA,CADE;AAELD,IAAAA,CAAC,EAAEA;AAFE,GAAP;AAID;;AAGP,MAAMG,OAAO,GAACT,UAAU,CAAC,CAACU,KAAD,EAAOC,GAAP,KAAa;AAEpC,MAAIC,GAAJ,EAAQC,MAAR,EAAeC,UAAf,EAA0BC,QAA1B;AACA,QAAMC,YAAY,GAAClB,MAAM,EAAzB;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,GAAG,GAAG,IAAIK,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAvB,CAA2BJ,YAAY,CAACK,OAAxC,EAAiD;AACjDC,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,EADC;AAENC,QAAAA,GAAG,EAAE;AAFC,OADyC;AAKjDnB,MAAAA,IAAI,EAAE,CAL2C;AAMjDoB,MAAAA,iBAAiB,EAAE,KAN8B;AAOjDC,MAAAA,qBAAqB,EAAE;AACrBC,QAAAA,UAAU,EAAE,CAACV,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBS,SAAnB,CAA6BC,OAA9B,EAAsCZ,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBS,SAAnB,CAA6BE,MAAnE;AADS;AAP0B,KAAjD,CAAN;AAWD,GAZQ,EAYP,EAZO,CAAT;AAeA7B,EAAAA,mBAAmB,CAACU,GAAD,EAAM,OAAO,EAAP,CAAN,CAAnB;AAMAZ,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEP,EAFO,CAAT;AAIA,sBACE;AAAK,IAAA,GAAG,EAAEiB,YAAV;AAAwB,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CAjCuB,CAAxB;AAmCA,eAAevB,OAAf","sourcesContent":["import React,{useState,createRef,useRef,useEffect,forwardRef, useImperativeHandle} from 'react'\r\nimport { getSatelliteInfo } from \"tle.js\";\r\n\r\nfunction getNormalizedCoord(coord, zoom) {\r\n        const y = coord.y;\r\n        let x = coord.x;\r\n        const tileRange = 1 << zoom;\r\n        if (y < 0 || y >= tileRange) {\r\n          return null;\r\n        }\r\n        if (x < 0 || x >= tileRange) {\r\n          x = ((x % tileRange) + tileRange) % tileRange;\r\n        }\r\n        return {\r\n          x: x,\r\n          y: y\r\n        };\r\n      }\r\n\r\n\r\nconst MapView=forwardRef((props,ref)=>{\r\n\r\n  var map,marker,infoWindow,polyLine\r\n  const containerRef=useRef()\r\n\r\n  useEffect(()=>{\r\n    map = new window.google.maps.Map(containerRef.current, {\r\n          center: {\r\n            lat: 50,\r\n            lng: 50\r\n          },\r\n          zoom: 5,\r\n          streetViewControl: false,\r\n          mapTypeControlOptions: {\r\n            mapTypeIds: [window.google.maps.MapTypeId.ROADMAP,window.google.maps.MapTypeId.HYBRID]\r\n          }\r\n        });\r\n  },[])\r\n\r\n\r\n  useImperativeHandle(ref, () => ({\r\n\r\n }));\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n  },[])\r\n\r\n  return(\r\n    <div ref={containerRef} style={{ width: \"100%\", height: \"100vh\" }}/>\r\n  )\r\n})\r\n\r\nexport default MapView\r\n"]},"metadata":{},"sourceType":"module"}