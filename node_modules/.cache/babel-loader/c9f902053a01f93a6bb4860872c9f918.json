{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Md. Mehrab Haque\\\\Desktop\\\\satellight\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,createRef,useRef,useEffect,useLayoutEffect,forwardRef,useImperativeHandle}from'react';import{getSatelliteInfo}from\"tle.js\";import Globe,{Point}from'react-globe.gl';import*as THREE from'three';import{sat_data}from'../assets/master';var map=function map(value,x1,y1,x2,y2){return(value-x1)*(y2-x2)/(y1-x1)+x2;};var sat_arr=[];Object.keys(sat_data).map(function(key,ind){var data=sat_data[key];console.log(key);sat_arr.push(getSatelliteInfo([data.tle_line1,data.tle_line2],Date.now(),0,0,0));});var point_arr=[];sat_arr.map(function(sat,ind){var schema={lat:sat.lat,lng:sat.lng,alt:sat.height/6400,radius:map(sat.height,400,35000,3,12),height:sat.height,velocity:sat.velocity,color:sat_data[Object.keys(sat_data)[ind]]['color'],ind:ind};point_arr.push(schema);});var ModelView=forwardRef(function(props,ref){var _useState=useState(point_arr),_useState2=_slicedToArray(_useState,2),pointArr=_useState2[0],setPointArr=_useState2[1];var _useState3=useState({height:0,width:0}),_useState4=_slicedToArray(_useState3,2),container=_useState4[0],setContainer=_useState4[1];var _useState5=useState(props.satCode),_useState6=_slicedToArray(_useState5,2),satCode=_useState6[0],setSatCode=_useState6[1];var globeEl=useRef();useImperativeHandle(ref,function(){return{setSatellite:function setSatellite(sat){setSatCode(sat.satCode);}};});useEffect(function(){//globeEl.current.controls().autoRotate = true;\n//globeEl.current.controls().autoRotateSpeed = 0.2;\nconsole.log(props.parent.current.offsetWidth);setContainer({height:props.parent.current.offsetHeight-5,width:props.parent.current.offsetWidth-4});},[]);useEffect(function(){var defaultSat=Object.keys(sat_data).indexOf(satCode);globeEl.current.pointOfView({lat:point_arr[defaultSat].lat,lng:point_arr[defaultSat].lng,altitude:pointArr[defaultSat].alt+1.2});},[satCode]);useEffect(function(){var interval=setInterval(function(){sat_arr=[];Object.keys(sat_data).map(function(key,ind){var data=sat_data[key];sat_arr.push(getSatelliteInfo([data.tle_line1,data.tle_line2],Date.now(),23.762397,90.418917,0));});point_arr=[];sat_arr.map(function(sat,ind){var schema={lat:sat.lat,lng:sat.lng,alt:sat.height/6400,radius:map(sat.height,400,35000,2.5,6),height:sat.height,velocity:sat.velocity,color:sat_data[Object.keys(sat_data)[ind]]['color'],ind:ind};point_arr.push(schema);});setPointArr(point_arr);},500);return function(){clearInterval(interval);};},[]);return/*#__PURE__*/React.createElement(Globe,{showAtmosphere:false,backgroundColor:\"#ffffff\",height:container.height,width:container.width,ref:globeEl,globeImageUrl:\"//unpkg.com/three-globe/example/img/earth-day.jpg\",bumpImageUrl:\"//unpkg.com/three-globe/example/img/earth-topology.png\",showGraticules:true,onCustomLayerHover:function onCustomLayerHover(d){if(d!=null&&d!=undefined){}},onCustomLayerClick:function onCustomLayerClick(d){if(d!=null&&d!=undefined){}},customLayerData:pointArr,customThreeObject:function customThreeObject(d){var mesh=new THREE.Mesh(new THREE.SphereBufferGeometry(d.radius),new THREE.MeshLambertMaterial({color:d.color}));var group=new THREE.Group();group.add(mesh);return group;},customThreeObjectUpdate:function customThreeObjectUpdate(obj,d){Object.assign(obj.position,globeEl.current.getCoords(d.lat,d.lng,d.alt));}});});export default ModelView;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/src/components/ModelView.js"],"names":["React","useState","createRef","useRef","useEffect","useLayoutEffect","forwardRef","useImperativeHandle","getSatelliteInfo","Globe","Point","THREE","sat_data","map","value","x1","y1","x2","y2","sat_arr","Object","keys","key","ind","data","console","log","push","tle_line1","tle_line2","Date","now","point_arr","sat","schema","lat","lng","alt","height","radius","velocity","color","ModelView","props","ref","pointArr","setPointArr","width","container","setContainer","satCode","setSatCode","globeEl","setSatellite","parent","current","offsetWidth","offsetHeight","defaultSat","indexOf","pointOfView","altitude","interval","setInterval","clearInterval","d","undefined","mesh","Mesh","SphereBufferGeometry","MeshLambertMaterial","group","Group","add","obj","assign","position","getCoords"],"mappings":"4KAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,CAAiCC,MAAjC,CAAwCC,SAAxC,CAAkDC,eAAlD,CAAkEC,UAAlE,CAA8EC,mBAA9E,KAAwG,OAAxG,CACA,OAASC,gBAAT,KAAiC,QAAjC,CACA,MAAOC,CAAAA,KAAP,EAAcC,KAAd,KAA0B,gBAA1B,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACC,KAAD,CAAQC,EAAR,CAAYC,EAAZ,CAAgBC,EAAhB,CAAoBC,EAApB,QAA2B,CAACJ,KAAK,CAAGC,EAAT,GAAgBG,EAAE,CAAGD,EAArB,GAA4BD,EAAE,CAAGD,EAAjC,EAAuCE,EAAlE,EAAZ,CAEA,GAAIE,CAAAA,OAAO,CAAC,EAAZ,CACAC,MAAM,CAACC,IAAP,CAAYT,QAAZ,EAAsBC,GAAtB,CAA0B,SAACS,GAAD,CAAKC,GAAL,CAAW,CACnC,GAAIC,CAAAA,IAAI,CAACZ,QAAQ,CAACU,GAAD,CAAjB,CACAG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EACAH,OAAO,CAACQ,IAAR,CAAanB,gBAAgB,CAAC,CAACgB,IAAI,CAACI,SAAN,CAAgBJ,IAAI,CAACK,SAArB,CAAD,CAAiCC,IAAI,CAACC,GAAL,EAAjC,CAA4C,CAA5C,CAA8C,CAA9C,CAAgD,CAAhD,CAA7B,EACD,CAJD,EAME,GAAIC,CAAAA,SAAS,CAAC,EAAd,CACAb,OAAO,CAACN,GAAR,CAAY,SAACoB,GAAD,CAAKV,GAAL,CAAW,CACrB,GAAIW,CAAAA,MAAM,CAAC,CACTC,GAAG,CAACF,GAAG,CAACE,GADC,CAETC,GAAG,CAACH,GAAG,CAACG,GAFC,CAGTC,GAAG,CAACJ,GAAG,CAACK,MAAJ,CAAW,IAHN,CAITC,MAAM,CAAC1B,GAAG,CAACoB,GAAG,CAACK,MAAL,CAAY,GAAZ,CAAgB,KAAhB,CAAsB,CAAtB,CAAwB,EAAxB,CAJD,CAKTA,MAAM,CAACL,GAAG,CAACK,MALF,CAMTE,QAAQ,CAACP,GAAG,CAACO,QANJ,CAOTC,KAAK,CAAC7B,QAAQ,CAACQ,MAAM,CAACC,IAAP,CAAYT,QAAZ,EAAsBW,GAAtB,CAAD,CAAR,CAAqC,OAArC,CAPG,CAQTA,GAAG,CAACA,GARK,CAAX,CAUAS,SAAS,CAACL,IAAV,CAAeO,MAAf,EACD,CAZD,EAcF,GAAMQ,CAAAA,SAAS,CAACpC,UAAU,CAAC,SAACqC,KAAD,CAAOC,GAAP,CAAa,eAEN3C,QAAQ,CAAC+B,SAAD,CAFF,wCAE/Ba,QAF+B,eAErBC,WAFqB,8BAGP7C,QAAQ,CAAC,CAACqC,MAAM,CAAC,CAAR,CAAUS,KAAK,CAAC,CAAhB,CAAD,CAHD,yCAG/BC,SAH+B,eAGrBC,YAHqB,8BAIXhD,QAAQ,CAAC0C,KAAK,CAACO,OAAP,CAJG,yCAI/BA,OAJ+B,eAIvBC,UAJuB,eAKtC,GAAMC,CAAAA,OAAO,CAAGjD,MAAM,EAAtB,CAGAI,mBAAmB,CAACqC,GAAD,CAAM,iBAAO,CAC9BS,YAD8B,uBACjBpB,GADiB,CACb,CACfkB,UAAU,CAAClB,GAAG,CAACiB,OAAL,CAAV,CACD,CAH6B,CAAP,EAAN,CAAnB,CAQA9C,SAAS,CAAC,UAAI,CACZ;AACE;AACAqB,OAAO,CAACC,GAAR,CAAYiB,KAAK,CAACW,MAAN,CAAaC,OAAb,CAAqBC,WAAjC,EACAP,YAAY,CAAC,CACXX,MAAM,CAACK,KAAK,CAACW,MAAN,CAAaC,OAAb,CAAqBE,YAArB,CAAkC,CAD9B,CAEXV,KAAK,CAACJ,KAAK,CAACW,MAAN,CAAaC,OAAb,CAAqBC,WAArB,CAAiC,CAF5B,CAAD,CAAZ,CAIH,CARQ,CAQP,EARO,CAAT,CAUApD,SAAS,CAAC,UAAI,CACZ,GAAIsD,CAAAA,UAAU,CAACtC,MAAM,CAACC,IAAP,CAAYT,QAAZ,EAAsB+C,OAAtB,CAA8BT,OAA9B,CAAf,CACAE,OAAO,CAACG,OAAR,CAAgBK,WAAhB,CAA4B,CAAEzB,GAAG,CAACH,SAAS,CAAC0B,UAAD,CAAT,CAAsBvB,GAA5B,CAAgCC,GAAG,CAACJ,SAAS,CAAC0B,UAAD,CAAT,CAAsBtB,GAA1D,CAA8DyB,QAAQ,CAAChB,QAAQ,CAACa,UAAD,CAAR,CAAqBrB,GAArB,CAAyB,GAAhG,CAA5B,EACD,CAHQ,CAGP,CAACa,OAAD,CAHO,CAAT,CAOA9C,SAAS,CAAC,UAAI,CAEZ,GAAM0D,CAAAA,QAAQ,CAAGC,WAAW,CAAC,UAAM,CACjC5C,OAAO,CAAC,EAAR,CACAC,MAAM,CAACC,IAAP,CAAYT,QAAZ,EAAsBC,GAAtB,CAA0B,SAACS,GAAD,CAAKC,GAAL,CAAW,CACnC,GAAIC,CAAAA,IAAI,CAACZ,QAAQ,CAACU,GAAD,CAAjB,CACAH,OAAO,CAACQ,IAAR,CAAanB,gBAAgB,CAAC,CAACgB,IAAI,CAACI,SAAN,CAAgBJ,IAAI,CAACK,SAArB,CAAD,CAAiCC,IAAI,CAACC,GAAL,EAAjC,CAA4C,SAA5C,CAAsD,SAAtD,CAAgE,CAAhE,CAA7B,EACD,CAHD,EAKAC,SAAS,CAAC,EAAV,CACAb,OAAO,CAACN,GAAR,CAAY,SAACoB,GAAD,CAAKV,GAAL,CAAW,CACrB,GAAIW,CAAAA,MAAM,CAAC,CACTC,GAAG,CAACF,GAAG,CAACE,GADC,CAETC,GAAG,CAACH,GAAG,CAACG,GAFC,CAGTC,GAAG,CAACJ,GAAG,CAACK,MAAJ,CAAW,IAHN,CAITC,MAAM,CAAC1B,GAAG,CAACoB,GAAG,CAACK,MAAL,CAAY,GAAZ,CAAgB,KAAhB,CAAsB,GAAtB,CAA0B,CAA1B,CAJD,CAKTA,MAAM,CAACL,GAAG,CAACK,MALF,CAMTE,QAAQ,CAACP,GAAG,CAACO,QANJ,CAOTC,KAAK,CAAC7B,QAAQ,CAACQ,MAAM,CAACC,IAAP,CAAYT,QAAZ,EAAsBW,GAAtB,CAAD,CAAR,CAAqC,OAArC,CAPG,CAQTA,GAAG,CAACA,GARK,CAAX,CAUAS,SAAS,CAACL,IAAV,CAAeO,MAAf,EACD,CAZD,EAaAY,WAAW,CAACd,SAAD,CAAX,CACD,CAtB2B,CAsBzB,GAtByB,CAA5B,CAuBA,MAAO,WAAM,CAACgC,aAAa,CAACF,QAAD,CAAb,CAAwB,CAAtC,CACD,CA1BQ,CA0BP,EA1BO,CAAT,CA4BA,mBAEI,oBAAC,KAAD,EAEM,cAAc,CAAE,KAFtB,CAGM,eAAe,CAAC,SAHtB,CAIM,MAAM,CAAEd,SAAS,CAACV,MAJxB,CAKM,KAAK,CAAEU,SAAS,CAACD,KALvB,CAMM,GAAG,CAAEK,OANX,CAOM,aAAa,CAAC,mDAPpB,CAQM,YAAY,CAAC,wDARnB,CAUM,cAAc,CAAE,IAVtB,CAaM,kBAAkB,CAAE,4BAAAa,CAAC,CAAE,CACnB,GAAGA,CAAC,EAAE,IAAH,EAAWA,CAAC,EAAEC,SAAjB,CAA2B,CAE1B,CACF,CAjBT,CAoBI,kBAAkB,CAAE,4BAAAD,CAAC,CAAE,CACnB,GAAGA,CAAC,EAAE,IAAH,EAAWA,CAAC,EAAEC,SAAjB,CAA2B,CAE1B,CACF,CAxBP,CA2BE,eAAe,CAAErB,QA3BnB,CA4BE,iBAAiB,CAAE,2BAAAoB,CAAC,CAAG,CACrB,GAAIE,CAAAA,IAAI,CAAC,GAAIxD,CAAAA,KAAK,CAACyD,IAAV,CACP,GAAIzD,CAAAA,KAAK,CAAC0D,oBAAV,CAA+BJ,CAAC,CAAC1B,MAAjC,CADO,CAEP,GAAI5B,CAAAA,KAAK,CAAC2D,mBAAV,CAA8B,CAAE7B,KAAK,CAAEwB,CAAC,CAACxB,KAAX,CAA9B,CAFO,CAAT,CAIA,GAAI8B,CAAAA,KAAK,CAAC,GAAI5D,CAAAA,KAAK,CAAC6D,KAAV,EAAV,CACAD,KAAK,CAACE,GAAN,CAAUN,IAAV,EACA,MAAOI,CAAAA,KAAP,CACD,CApCH,CAsCE,uBAAuB,CAAE,iCAACG,GAAD,CAAMT,CAAN,CAAY,CACnC7C,MAAM,CAACuD,MAAP,CAAcD,GAAG,CAACE,QAAlB,CAA4BxB,OAAO,CAACG,OAAR,CAAgBsB,SAAhB,CAA0BZ,CAAC,CAAC9B,GAA5B,CAAiC8B,CAAC,CAAC7B,GAAnC,CAAwC6B,CAAC,CAAC5B,GAA1C,CAA5B,EACD,CAxCH,EAFJ,CA8CD,CA3GyB,CAA1B,CA6GA,cAAeK,CAAAA,SAAf","sourcesContent":["import React,{useState,createRef,useRef,useEffect,useLayoutEffect,forwardRef, useImperativeHandle} from 'react'\r\nimport { getSatelliteInfo } from \"tle.js\";\r\nimport Globe,{Point} from 'react-globe.gl';\r\nimport * as THREE from 'three'\r\nimport {sat_data} from '../assets/master'\r\n\r\nconst map = (value, x1, y1, x2, y2) => (value - x1) * (y2 - x2) / (y1 - x1) + x2;\r\n\r\nvar sat_arr=[]\r\nObject.keys(sat_data).map((key,ind)=>{\r\n  var data=sat_data[key]\r\n  console.log(key)\r\n  sat_arr.push(getSatelliteInfo([data.tle_line1,data.tle_line2],Date.now(),0,0,0))\r\n})\r\n\r\n  var point_arr=[]\r\n  sat_arr.map((sat,ind)=>{\r\n    var schema={\r\n      lat:sat.lat,\r\n      lng:sat.lng,\r\n      alt:sat.height/6400,\r\n      radius:map(sat.height,400,35000,3,12),\r\n      height:sat.height,\r\n      velocity:sat.velocity,\r\n      color:sat_data[Object.keys(sat_data)[ind]]['color'],\r\n      ind:ind\r\n    }\r\n    point_arr.push(schema)\r\n  })\r\n\r\nconst ModelView=forwardRef((props,ref)=>{\r\n\r\n  const [pointArr, setPointArr] = useState(point_arr);\r\n  const [container,setContainer]=useState({height:0,width:0})\r\n  const [satCode,setSatCode]=useState(props.satCode)\r\n  const globeEl = useRef();\r\n\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    setSatellite(sat){\r\n      setSatCode(sat.satCode)\r\n    }\r\n }));\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    //globeEl.current.controls().autoRotate = true;\r\n      //globeEl.current.controls().autoRotateSpeed = 0.2;\r\n      console.log(props.parent.current.offsetWidth)\r\n      setContainer({\r\n        height:props.parent.current.offsetHeight-5,\r\n        width:props.parent.current.offsetWidth-4\r\n      })\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    var defaultSat=Object.keys(sat_data).indexOf(satCode)\r\n    globeEl.current.pointOfView({ lat:point_arr[defaultSat].lat,lng:point_arr[defaultSat].lng,altitude:pointArr[defaultSat].alt+1.2 });\r\n  },[satCode])\r\n\r\n  \r\n\r\n  useEffect(()=>{\r\n\r\n    const interval = setInterval(() => {\r\n      sat_arr=[]\r\n      Object.keys(sat_data).map((key,ind)=>{\r\n        var data=sat_data[key]\r\n        sat_arr.push(getSatelliteInfo([data.tle_line1,data.tle_line2],Date.now(),23.762397,90.418917,0))\r\n      })\r\n\r\n      point_arr=[]\r\n      sat_arr.map((sat,ind)=>{\r\n        var schema={\r\n          lat:sat.lat,\r\n          lng:sat.lng,\r\n          alt:sat.height/6400,\r\n          radius:map(sat.height,400,35000,2.5,6),\r\n          height:sat.height,\r\n          velocity:sat.velocity,\r\n          color:sat_data[Object.keys(sat_data)[ind]]['color'],\r\n          ind:ind\r\n        }\r\n        point_arr.push(schema)\r\n      })\r\n      setPointArr(point_arr)\r\n    }, 500);\r\n    return () => {clearInterval(interval)}\r\n  },[])\r\n\r\n  return(\r\n\r\n      <Globe\r\n\r\n            showAtmosphere={false}\r\n            backgroundColor='#ffffff'\r\n            height={container.height}\r\n            width={container.width}\r\n            ref={globeEl}\r\n            globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-day.jpg\"\r\n            bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\r\n\r\n            showGraticules={true}\r\n\r\n\r\n            onCustomLayerHover={d=>{\r\n                if(d!=null && d!=undefined){\r\n\r\n                }\r\n              }\r\n          }\r\n\r\n          onCustomLayerClick={d=>{\r\n              if(d!=null && d!=undefined){\r\n\r\n              }\r\n            }\r\n        }\r\n\r\n        customLayerData={pointArr}\r\n        customThreeObject={d =>{\r\n          var mesh=new THREE.Mesh(\r\n            new THREE.SphereBufferGeometry(d.radius),\r\n            new THREE.MeshLambertMaterial({ color: d.color })\r\n          )\r\n          var group=new THREE.Group()\r\n          group.add(mesh)\r\n          return group\r\n        }\r\n      }\r\n        customThreeObjectUpdate={(obj, d) => {\r\n          Object.assign(obj.position, globeEl.current.getCoords(d.lat, d.lng, d.alt));\r\n        }}\r\n       />\r\n\r\n  )\r\n})\r\n\r\nexport default ModelView\r\n"]},"metadata":{},"sourceType":"module"}