{"ast":null,"code":"import withGeometry from '../mixins/with-geometry';\nimport Element from './element';\nimport paintable from '../mixins/paintable';\nimport measurable from '../mixins/measurable';\nimport GeometryRect from '../geometry/rect';\nimport { defined } from '../util';\n\nvar Rect = function (superclass) {\n  function Rect(geometry, options) {\n    if (geometry === void 0) geometry = new GeometryRect();\n    if (options === void 0) options = {};\n    superclass.call(this, options);\n    this.geometry(geometry);\n\n    if (!defined(this.options.stroke)) {\n      this.stroke(\"#000\");\n    }\n  }\n\n  if (superclass) Rect.__proto__ = superclass;\n  Rect.prototype = Object.create(superclass && superclass.prototype);\n  Rect.prototype.constructor = Rect;\n  var prototypeAccessors = {\n    nodeType: {\n      configurable: true\n    }\n  };\n\n  prototypeAccessors.nodeType.get = function () {\n    return \"Rect\";\n  };\n\n  Rect.prototype._bbox = function _bbox(matrix) {\n    return this._geometry.bbox(matrix);\n  };\n\n  Rect.prototype.rawBBox = function rawBBox() {\n    return this._geometry.bbox();\n  };\n\n  Rect.prototype._containsPoint = function _containsPoint(point) {\n    return this._geometry.containsPoint(point);\n  };\n\n  Rect.prototype._isOnPath = function _isOnPath(point) {\n    return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n  };\n\n  Object.defineProperties(Rect.prototype, prototypeAccessors);\n  return Rect;\n}(paintable(measurable(withGeometry(Element))));\n\nexport default Rect;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/node_modules/@progress/kendo-drawing/dist/es/shapes/rect.js"],"names":["withGeometry","Element","paintable","measurable","GeometryRect","defined","Rect","superclass","geometry","options","call","stroke","__proto__","prototype","Object","create","constructor","prototypeAccessors","nodeType","configurable","get","_bbox","matrix","_geometry","bbox","rawBBox","_containsPoint","point","containsPoint","_isOnPath","width","defineProperties"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,yBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,SAAxB;;AAGA,IAAIC,IAAI,GAAI,UAAUC,UAAV,EAAsB;AAC9B,WAASD,IAAT,CAAcE,QAAd,EAAwBC,OAAxB,EAAiC;AAC7B,QAAKD,QAAQ,KAAK,KAAK,CAAvB,EAA2BA,QAAQ,GAAG,IAAIJ,YAAJ,EAAX;AAC3B,QAAKK,OAAO,KAAK,KAAK,CAAtB,EAA0BA,OAAO,GAAG,EAAV;AAE1BF,IAAAA,UAAU,CAACG,IAAX,CAAgB,IAAhB,EAAsBD,OAAtB;AAEA,SAAKD,QAAL,CAAcA,QAAd;;AAEA,QAAI,CAACH,OAAO,CAAC,KAAKI,OAAL,CAAaE,MAAd,CAAZ,EAAmC;AAC/B,WAAKA,MAAL,CAAY,MAAZ;AACH;AACJ;;AAED,MAAKJ,UAAL,EAAkBD,IAAI,CAACM,SAAL,GAAiBL,UAAjB;AAClBD,EAAAA,IAAI,CAACO,SAAL,GAAiBC,MAAM,CAACC,MAAP,CAAeR,UAAU,IAAIA,UAAU,CAACM,SAAxC,CAAjB;AACAP,EAAAA,IAAI,CAACO,SAAL,CAAeG,WAAf,GAA6BV,IAA7B;AAEA,MAAIW,kBAAkB,GAAG;AAAEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AAAZ,GAAzB;;AAEAF,EAAAA,kBAAkB,CAACC,QAAnB,CAA4BE,GAA5B,GAAkC,YAAY;AAC1C,WAAO,MAAP;AACH,GAFD;;AAIAd,EAAAA,IAAI,CAACO,SAAL,CAAeQ,KAAf,GAAuB,SAASA,KAAT,CAAgBC,MAAhB,EAAwB;AAC3C,WAAO,KAAKC,SAAL,CAAeC,IAAf,CAAoBF,MAApB,CAAP;AACH,GAFD;;AAIAhB,EAAAA,IAAI,CAACO,SAAL,CAAeY,OAAf,GAAyB,SAASA,OAAT,GAAoB;AACzC,WAAO,KAAKF,SAAL,CAAeC,IAAf,EAAP;AACH,GAFD;;AAIAlB,EAAAA,IAAI,CAACO,SAAL,CAAea,cAAf,GAAgC,SAASA,cAAT,CAAyBC,KAAzB,EAAgC;AAC5D,WAAO,KAAKJ,SAAL,CAAeK,aAAf,CAA6BD,KAA7B,CAAP;AACH,GAFD;;AAIArB,EAAAA,IAAI,CAACO,SAAL,CAAegB,SAAf,GAA2B,SAASA,SAAT,CAAoBF,KAApB,EAA2B;AAClD,WAAO,KAAKnB,QAAL,GAAgBqB,SAAhB,CAA0BF,KAA1B,EAAiC,KAAKlB,OAAL,CAAaE,MAAb,CAAoBmB,KAApB,GAA4B,CAA7D,CAAP;AACH,GAFD;;AAIAhB,EAAAA,MAAM,CAACiB,gBAAP,CAAyBzB,IAAI,CAACO,SAA9B,EAAyCI,kBAAzC;AAEA,SAAOX,IAAP;AACH,CA3CW,CA2CVJ,SAAS,CAACC,UAAU,CAACH,YAAY,CAACC,OAAD,CAAb,CAAX,CA3CC,CAAZ;;AA6CA,eAAeK,IAAf","sourcesContent":["import withGeometry from '../mixins/with-geometry';\nimport Element from './element';\nimport paintable from '../mixins/paintable';\nimport measurable from '../mixins/measurable';\nimport GeometryRect from '../geometry/rect';\nimport { defined } from '../util';\n\n\nvar Rect = (function (superclass) {\n    function Rect(geometry, options) {\n        if ( geometry === void 0 ) geometry = new GeometryRect();\n        if ( options === void 0 ) options = {};\n\n        superclass.call(this, options);\n\n        this.geometry(geometry);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke(\"#000\");\n        }\n    }\n\n    if ( superclass ) Rect.__proto__ = superclass;\n    Rect.prototype = Object.create( superclass && superclass.prototype );\n    Rect.prototype.constructor = Rect;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\n\n    prototypeAccessors.nodeType.get = function () {\n        return \"Rect\";\n    };\n\n    Rect.prototype._bbox = function _bbox (matrix) {\n        return this._geometry.bbox(matrix);\n    };\n\n    Rect.prototype.rawBBox = function rawBBox () {\n        return this._geometry.bbox();\n    };\n\n    Rect.prototype._containsPoint = function _containsPoint (point) {\n        return this._geometry.containsPoint(point);\n    };\n\n    Rect.prototype._isOnPath = function _isOnPath (point) {\n        return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n    };\n\n    Object.defineProperties( Rect.prototype, prototypeAccessors );\n\n    return Rect;\n}(paintable(measurable(withGeometry(Element)))));\n\nexport default Rect;\n"]},"metadata":{},"sourceType":"module"}