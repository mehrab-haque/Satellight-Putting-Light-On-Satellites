{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Md. Mehrab Haque\\\\Desktop\\\\satellight\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,createRef,useRef,useEffect,forwardRef,useImperativeHandle}from'react';import{getSatelliteInfo}from\"tle.js\";import WorldWind from'@nasaworldwind/worldwind';import{sat_data}from'../assets/master';var wwd,timeDiff,animator,interval,map,marker,infoWindow,polyLine,poly=[],tle,data;var FPVView=forwardRef(function(props,ref){tle=[props.data.tle_line1,props.data.tle_line2];timeDiff=props.timeDiff;var initData=getSatelliteInfo(tle,Date.now()+timeDiff,23.762397,90.418917);var containerRef=useRef();var _useState=useState(props.satCode),_useState2=_slicedToArray(_useState,2),satCode=_useState2[0],setSatCode=_useState2[1];var _useState3=useState(initData),_useState4=_slicedToArray(_useState3,2),satData=_useState4[0],setSatData=_useState4[1];var _useState5=useState(Date.now()+timeDiff),_useState6=_slicedToArray(_useState5,2),timestamp=_useState6[0],setTimestamp=_useState6[1];useImperativeHandle(ref,function(){return{setSatellite:function setSatellite(sat){setSatData(sat.data);setSatCode(sat.satCode);},setTimeDiff:function setTimeDiff(val){timeDiff=val;}};});useEffect(function(){WorldWind.Logger.setLoggingLevel(WorldWind.Logger.LEVEL_WARNING);wwd=new WorldWind.WorldWindow(containerRef.current);animator=new WorldWind.GoToAnimator(wwd);var bMNGOneImageLayer=new WorldWind.BMNGOneImageLayer();var bMNGLayer=new WorldWind.BMNGLayer();var bMNGLandSatLayer=new WorldWind.BMNGLandsatLayer();var atmosphereLayer=new WorldWind.AtmosphereLayer(require('../assets/starfield.png'));var starFieldLayer=new WorldWind.StarFieldLayer();var layers=[{layer:bMNGOneImageLayer,enabled:true},{layer:bMNGLayer,enabled:true},{layer:bMNGLandSatLayer,enabled:true},{layer:starFieldLayer,enabled:true},{layer:atmosphereLayer,enabled:true},{layer:new WorldWind.ViewControlsLayer(wwd),enabled:true}];for(var l=0;l<layers.length;l++){layers[l].layer.enabled=layers[l].enabled;wwd.addLayer(layers[l].layer);}atmosphereLayer.time=Date.now()+timeDiff;function runSimulation(){atmosphereLayer.time=new Date(Date.now()+timeDiff);wwd.redraw();requestAnimationFrame(runSimulation);}requestAnimationFrame(runSimulation);},[]);useEffect(function(){if(satCode){interval=setInterval(function(){var currData=getSatelliteInfo(tle,Date.now()+timeDiff,23.762397,90.418917);wwd.goTo(new WorldWind.Position(currData.lat,currData.lng,currData.height*1000));setTimestamp(Date.now()+timeDiff);setSatData(currData);},100);}else{clearInterval(interval);}},[satCode]);return/*#__PURE__*/React.createElement(\"div\",{style:{width:'100%',height:'100%'}},/*#__PURE__*/React.createElement(\"div\",{style:{color:'#00ff00',backgroundColor:'#00000088',position:'absolute',padding:'5px'}},sat_data[satCode].sat_name,\" \",sat_data[satCode].country_name,\" \",satData.lat!=null&&satData.lat!=undefined?\"Lat:\".concat(satData.lat.toFixed(3),\" Lng:\").concat(satData.lng.toFixed(3),\" Altitude:\").concat(satData.height.toFixed(3),\"km Velocity:\").concat(satData.velocity.toFixed(3),\"km/s \").concat(new Date(timestamp).toLocaleString()):''),/*#__PURE__*/React.createElement(\"canvas\",{ref:containerRef,className:\"globeBg\",style:{backgroundColor:'#000000',width:\"100%\",height:\"100%\"}}));});export default FPVView;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/src/components/FPVView.js"],"names":["React","useState","createRef","useRef","useEffect","forwardRef","useImperativeHandle","getSatelliteInfo","WorldWind","sat_data","wwd","timeDiff","animator","interval","map","marker","infoWindow","polyLine","poly","tle","data","FPVView","props","ref","tle_line1","tle_line2","initData","Date","now","containerRef","satCode","setSatCode","satData","setSatData","timestamp","setTimestamp","setSatellite","sat","setTimeDiff","val","Logger","setLoggingLevel","LEVEL_WARNING","WorldWindow","current","GoToAnimator","bMNGOneImageLayer","BMNGOneImageLayer","bMNGLayer","BMNGLayer","bMNGLandSatLayer","BMNGLandsatLayer","atmosphereLayer","AtmosphereLayer","require","starFieldLayer","StarFieldLayer","layers","layer","enabled","ViewControlsLayer","l","length","addLayer","time","runSimulation","redraw","requestAnimationFrame","setInterval","currData","goTo","Position","lat","lng","height","clearInterval","width","color","backgroundColor","position","padding","sat_name","country_name","undefined","toFixed","velocity","toLocaleString"],"mappings":"4KAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,CAAiCC,MAAjC,CAAwCC,SAAxC,CAAkDC,UAAlD,CAA8DC,mBAA9D,KAAwF,OAAxF,CACA,OAASC,gBAAT,KAAiC,QAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CAEA,GAAIC,CAAAA,GAAJ,CAAQC,QAAR,CAAiBC,QAAjB,CAA0BC,QAA1B,CAAmCC,GAAnC,CAAuCC,MAAvC,CAA8CC,UAA9C,CAAyDC,QAAzD,CAAkEC,IAAI,CAAC,EAAvE,CAA0EC,GAA1E,CAA8EC,IAA9E,CAEA,GAAMC,CAAAA,OAAO,CAAChB,UAAU,CAAC,SAACiB,KAAD,CAAOC,GAAP,CAAa,CACpCJ,GAAG,CAAC,CAACG,KAAK,CAACF,IAAN,CAAWI,SAAZ,CAAsBF,KAAK,CAACF,IAAN,CAAWK,SAAjC,CAAJ,CACAd,QAAQ,CAACW,KAAK,CAACX,QAAf,CACA,GAAIe,CAAAA,QAAQ,CAACnB,gBAAgB,CAACY,GAAD,CAAKQ,IAAI,CAACC,GAAL,GAAWjB,QAAhB,CAAyB,SAAzB,CAAmC,SAAnC,CAA7B,CACA,GAAMkB,CAAAA,YAAY,CAAC1B,MAAM,EAAzB,CAJoC,cAKTF,QAAQ,CAACqB,KAAK,CAACQ,OAAP,CALC,wCAK7BA,OAL6B,eAKrBC,UALqB,8BAMT9B,QAAQ,CAACyB,QAAD,CANC,yCAM7BM,OAN6B,eAMrBC,UANqB,8BAOLhC,QAAQ,CAAC0B,IAAI,CAACC,GAAL,GAAWjB,QAAZ,CAPH,yCAO7BuB,SAP6B,eAOnBC,YAPmB,eASpC7B,mBAAmB,CAACiB,GAAD,CAAM,iBAAO,CAC9Ba,YAD8B,uBACjBC,GADiB,CACb,CACfJ,UAAU,CAACI,GAAG,CAACjB,IAAL,CAAV,CACAW,UAAU,CAACM,GAAG,CAACP,OAAL,CAAV,CACD,CAJ6B,CAK9BQ,WAL8B,sBAKlBC,GALkB,CAKd,CACd5B,QAAQ,CAAC4B,GAAT,CACD,CAP6B,CAAP,EAAN,CAAnB,CAYAnC,SAAS,CAAC,UAAI,CACZI,SAAS,CAACgC,MAAV,CAAiBC,eAAjB,CAAiCjC,SAAS,CAACgC,MAAV,CAAiBE,aAAlD,EACAhC,GAAG,CAAG,GAAIF,CAAAA,SAAS,CAACmC,WAAd,CAA0Bd,YAAY,CAACe,OAAvC,CAAN,CACAhC,QAAQ,CAAC,GAAIJ,CAAAA,SAAS,CAACqC,YAAd,CAA2BnC,GAA3B,CAAT,CACA,GAAIoC,CAAAA,iBAAiB,CAAG,GAAItC,CAAAA,SAAS,CAACuC,iBAAd,EAAxB,CACA,GAAIC,CAAAA,SAAS,CAAC,GAAIxC,CAAAA,SAAS,CAACyC,SAAd,EAAd,CACA,GAAIC,CAAAA,gBAAgB,CAAC,GAAI1C,CAAAA,SAAS,CAAC2C,gBAAd,EAArB,CACA,GAAIC,CAAAA,eAAe,CAAG,GAAI5C,CAAAA,SAAS,CAAC6C,eAAd,CAA8BC,OAAO,CAAC,yBAAD,CAArC,CAAtB,CACA,GAAIC,CAAAA,cAAc,CAAC,GAAI/C,CAAAA,SAAS,CAACgD,cAAd,EAAnB,CAEA,GAAIC,CAAAA,MAAM,CAAG,CACT,CAACC,KAAK,CAACZ,iBAAP,CAAyBa,OAAO,CAAC,IAAjC,CADS,CAET,CAACD,KAAK,CAACV,SAAP,CAAiBW,OAAO,CAAC,IAAzB,CAFS,CAGT,CAACD,KAAK,CAACR,gBAAP,CAAwBS,OAAO,CAAC,IAAhC,CAHS,CAIT,CAACD,KAAK,CAACH,cAAP,CAAsBI,OAAO,CAAC,IAA9B,CAJS,CAKT,CAACD,KAAK,CAACN,eAAP,CAAuBO,OAAO,CAAC,IAA/B,CALS,CAMT,CAACD,KAAK,CAAE,GAAIlD,CAAAA,SAAS,CAACoD,iBAAd,CAAgClD,GAAhC,CAAR,CAA8CiD,OAAO,CAAE,IAAvD,CANS,CAAb,CASA,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,MAAM,CAACK,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACpCJ,MAAM,CAACI,CAAD,CAAN,CAAUH,KAAV,CAAgBC,OAAhB,CAA0BF,MAAM,CAACI,CAAD,CAAN,CAAUF,OAApC,CACAjD,GAAG,CAACqD,QAAJ,CAAaN,MAAM,CAACI,CAAD,CAAN,CAAUH,KAAvB,EACH,CACGN,eAAe,CAACY,IAAhB,CAAuBrC,IAAI,CAACC,GAAL,GAAWjB,QAAlC,CACA,QAASsD,CAAAA,aAAT,EAAyB,CACrBb,eAAe,CAACY,IAAhB,CAAuB,GAAIrC,CAAAA,IAAJ,CAASA,IAAI,CAACC,GAAL,GAAWjB,QAApB,CAAvB,CACAD,GAAG,CAACwD,MAAJ,GACAC,qBAAqB,CAACF,aAAD,CAArB,CACH,CACDE,qBAAqB,CAACF,aAAD,CAArB,CACL,CA9BQ,CA8BP,EA9BO,CAAT,CAgCA7D,SAAS,CAAC,UAAI,CACZ,GAAG0B,OAAH,CAAY,CACVjB,QAAQ,CAAGuD,WAAW,CAAC,UAAM,CAC3B,GAAIC,CAAAA,QAAQ,CAAC9D,gBAAgB,CAACY,GAAD,CAAKQ,IAAI,CAACC,GAAL,GAAWjB,QAAhB,CAAyB,SAAzB,CAAmC,SAAnC,CAA7B,CACAD,GAAG,CAAC4D,IAAJ,CAAS,GAAI9D,CAAAA,SAAS,CAAC+D,QAAd,CAAuBF,QAAQ,CAACG,GAAhC,CAAoCH,QAAQ,CAACI,GAA7C,CAAiDJ,QAAQ,CAACK,MAAT,CAAgB,IAAjE,CAAT,EACAvC,YAAY,CAACR,IAAI,CAACC,GAAL,GAAWjB,QAAZ,CAAZ,CACAsB,UAAU,CAACoC,QAAD,CAAV,CACD,CALqB,CAKnB,GALmB,CAAtB,CAMD,CAPD,IAOO,CACLM,aAAa,CAAC9D,QAAD,CAAb,CACD,CACF,CAXQ,CAWP,CAACiB,OAAD,CAXO,CAAT,CAaA,mBACE,2BAAK,KAAK,CAAE,CAAC8C,KAAK,CAAC,MAAP,CAAcF,MAAM,CAAC,MAArB,CAAZ,eACE,2BAAK,KAAK,CAAE,CAACG,KAAK,CAAC,SAAP,CAAiBC,eAAe,CAAC,WAAjC,CAA6CC,QAAQ,CAAC,UAAtD,CAAiEC,OAAO,CAAC,KAAzE,CAAZ,EACGvE,QAAQ,CAACqB,OAAD,CAAR,CAAkBmD,QADrB,KACgCxE,QAAQ,CAACqB,OAAD,CAAR,CAAkBoD,YADlD,KACiElD,OAAO,CAACwC,GAAR,EAAa,IAAb,EAAqBxC,OAAO,CAACwC,GAAR,EAAaW,SAAlC,eAAmDnD,OAAO,CAACwC,GAAR,CAAYY,OAAZ,CAAoB,CAApB,CAAnD,iBAAiFpD,OAAO,CAACyC,GAAR,CAAYW,OAAZ,CAAoB,CAApB,CAAjF,sBAAoHpD,OAAO,CAAC0C,MAAR,CAAeU,OAAf,CAAuB,CAAvB,CAApH,wBAA4JpD,OAAO,CAACqD,QAAR,CAAiBD,OAAjB,CAAyB,CAAzB,CAA5J,iBAA+L,GAAIzD,CAAAA,IAAJ,CAASO,SAAT,EAAoBoD,cAApB,EAA/L,EAAsO,EADvS,CADF,cAIE,8BAAQ,GAAG,CAAEzD,YAAb,CAA2B,SAAS,CAAC,SAArC,CAA+C,KAAK,CAAE,CAAEiD,eAAe,CAAC,SAAlB,CAA4BF,KAAK,CAAE,MAAnC,CAA2CF,MAAM,CAAE,MAAnD,CAAtD,EAJF,CADF,CAQD,CA1EuB,CAAxB,CA4EA,cAAerD,CAAAA,OAAf","sourcesContent":["import React,{useState,createRef,useRef,useEffect,forwardRef, useImperativeHandle} from 'react'\r\nimport { getSatelliteInfo } from \"tle.js\";\r\nimport WorldWind from '@nasaworldwind/worldwind'\r\nimport {sat_data} from '../assets/master'\r\n\r\nvar wwd,timeDiff,animator,interval,map,marker,infoWindow,polyLine,poly=[],tle,data\r\n\r\nconst FPVView=forwardRef((props,ref)=>{\r\n  tle=[props.data.tle_line1,props.data.tle_line2]\r\n  timeDiff=props.timeDiff\r\n  var initData=getSatelliteInfo(tle,Date.now()+timeDiff,23.762397,90.418917)\r\n  const containerRef=useRef()\r\n  const [satCode,setSatCode]=useState(props.satCode)\r\n  const [satData,setSatData]=useState(initData)\r\n  const [timestamp,setTimestamp]=useState(Date.now()+timeDiff)\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    setSatellite(sat){\r\n      setSatData(sat.data)\r\n      setSatCode(sat.satCode)\r\n    },\r\n    setTimeDiff(val){\r\n      timeDiff=val\r\n    }\r\n }));\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    WorldWind.Logger.setLoggingLevel(WorldWind.Logger.LEVEL_WARNING);\r\n    wwd = new WorldWind.WorldWindow(containerRef.current);\r\n    animator=new WorldWind.GoToAnimator(wwd)\r\n    var bMNGOneImageLayer = new WorldWind.BMNGOneImageLayer();\r\n    var bMNGLayer=new WorldWind.BMNGLayer()\r\n    var bMNGLandSatLayer=new WorldWind.BMNGLandsatLayer();\r\n    var atmosphereLayer = new WorldWind.AtmosphereLayer(require('../assets/starfield.png'));\r\n    var starFieldLayer=new WorldWind.StarFieldLayer()\r\n\r\n    var layers = [\r\n        {layer:bMNGOneImageLayer,enabled:true},\r\n        {layer:bMNGLayer,enabled:true},\r\n        {layer:bMNGLandSatLayer,enabled:true},\r\n        {layer:starFieldLayer,enabled:true},\r\n        {layer:atmosphereLayer,enabled:true},\r\n        {layer: new WorldWind.ViewControlsLayer(wwd), enabled: true}\r\n    ];\r\n\r\n    for (var l = 0; l < layers.length; l++) {\r\n        layers[l].layer.enabled = layers[l].enabled;\r\n        wwd.addLayer(layers[l].layer);\r\n    }\r\n        atmosphereLayer.time = Date.now()+timeDiff;\r\n        function runSimulation() {\r\n            atmosphereLayer.time = new Date(Date.now()+timeDiff)\r\n            wwd.redraw();\r\n            requestAnimationFrame(runSimulation);\r\n        }\r\n        requestAnimationFrame(runSimulation);\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(satCode) {\r\n      interval = setInterval(() => {\r\n        var currData=getSatelliteInfo(tle,Date.now()+timeDiff,23.762397,90.418917)\r\n        wwd.goTo(new WorldWind.Position(currData.lat,currData.lng,currData.height*1000));\r\n        setTimestamp(Date.now()+timeDiff)\r\n        setSatData(currData)\r\n      }, 100);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n  },[satCode])\r\n\r\n  return(\r\n    <div style={{width:'100%',height:'100%'}}>\r\n      <div style={{color:'#00ff00',backgroundColor:'#00000088',position:'absolute',padding:'5px'}}>\r\n        {sat_data[satCode].sat_name} {sat_data[satCode].country_name} {satData.lat!=null && satData.lat!=undefined?`Lat:${satData.lat.toFixed(3)} Lng:${satData.lng.toFixed(3)} Altitude:${satData.height.toFixed(3)}km Velocity:${satData.velocity.toFixed(3)}km/s ${new Date(timestamp).toLocaleString()}`:''}\r\n      </div>\r\n      <canvas ref={containerRef} className='globeBg' style={{ backgroundColor:'#000000',width: \"100%\", height: \"100%\" }}/>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default FPVView\r\n"]},"metadata":{},"sourceType":"module"}