{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Md. Mehrab Haque\\\\Desktop\\\\satellight\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,createRef,useRef,useEffect,forwardRef,useImperativeHandle}from'react';import{getSatelliteInfo}from\"tle.js\";import WorldWind from'@nasaworldwind/worldwind';var wwd,timeDiff,animator,interval,map,marker,infoWindow,polyLine,poly=[],tle,data;var FPVView=forwardRef(function(props,ref){var containerRef=useRef();var _useState=useState(props.satCode),_useState2=_slicedToArray(_useState,2),satCode=_useState2[0],setSatCode=_useState2[1];tle=[props.data.tle_line1,props.data.tle_line2];timeDiff=props.timeDiff;useImperativeHandle(ref,function(){return{setSatellite:function setSatellite(sat){setSatCode(sat.satCode);},setTimeDiff:function setTimeDiff(val){timeDiff=val;}};});useEffect(function(){WorldWind.Logger.setLoggingLevel(WorldWind.Logger.LEVEL_WARNING);wwd=new WorldWind.WorldWindow(containerRef.current);animator=new WorldWind.GoToAnimator(wwd);var bMNGOneImageLayer=new WorldWind.BMNGOneImageLayer();var bMNGLayer=new WorldWind.BMNGLayer();var bMNGLandSatLayer=new WorldWind.BMNGLandsatLayer();var atmosphereLayer=new WorldWind.AtmosphereLayer(require('../assets/starfield.png'));var starFieldLayer=new WorldWind.StarFieldLayer();var layers=[{layer:bMNGOneImageLayer,enabled:true},{layer:bMNGLayer,enabled:true},{layer:bMNGLandSatLayer,enabled:true},{layer:starFieldLayer,enabled:true},{layer:atmosphereLayer,enabled:true},{layer:new WorldWind.ViewControlsLayer(wwd),enabled:true}];for(var l=0;l<layers.length;l++){layers[l].layer.enabled=layers[l].enabled;wwd.addLayer(layers[l].layer);}atmosphereLayer.time=Date.now()+timeDiff;function runSimulation(){atmosphereLayer.time=new Date(Date.now()+timeDiff);wwd.redraw();requestAnimationFrame(runSimulation);}requestAnimationFrame(runSimulation);},[]);useEffect(function(){if(satCode){interval=setInterval(function(){var currData=getSatelliteInfo(tle,Date.now()+timeDiff,23.762397,90.418917);wwd.goTo(new WorldWind.Position(currData.lat,currData.lng,currData.height*1000));},100);}else{clearInterval(interval);}},[satCode]);return/*#__PURE__*/React.createElement(\"canvas\",{ref:containerRef,className:\"globeBg\",style:{backgroundColor:'#000000',width:\"100%\",height:\"100%\"}});});export default FPVView;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/src/components/FPVView.js"],"names":["React","useState","createRef","useRef","useEffect","forwardRef","useImperativeHandle","getSatelliteInfo","WorldWind","wwd","timeDiff","animator","interval","map","marker","infoWindow","polyLine","poly","tle","data","FPVView","props","ref","containerRef","satCode","setSatCode","tle_line1","tle_line2","setSatellite","sat","setTimeDiff","val","Logger","setLoggingLevel","LEVEL_WARNING","WorldWindow","current","GoToAnimator","bMNGOneImageLayer","BMNGOneImageLayer","bMNGLayer","BMNGLayer","bMNGLandSatLayer","BMNGLandsatLayer","atmosphereLayer","AtmosphereLayer","require","starFieldLayer","StarFieldLayer","layers","layer","enabled","ViewControlsLayer","l","length","addLayer","time","Date","now","runSimulation","redraw","requestAnimationFrame","setInterval","currData","goTo","Position","lat","lng","height","clearInterval","backgroundColor","width"],"mappings":"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","sourcesContent":["import React,{useState,createRef,useRef,useEffect,forwardRef, useImperativeHandle} from 'react'\r\nimport { getSatelliteInfo } from \"tle.js\";\r\nimport WorldWind from '@nasaworldwind/worldwind'\r\n\r\nvar wwd,timeDiff,animator,interval,map,marker,infoWindow,polyLine,poly=[],tle,data\r\n\r\nconst FPVView=forwardRef((props,ref)=>{\r\n  const containerRef=useRef()\r\n  const [satCode,setSatCode]=useState(props.satCode)\r\n  tle=[props.data.tle_line1,props.data.tle_line2]\r\n  timeDiff=props.timeDiff\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    setSatellite(sat){\r\n      setSatCode(sat.satCode)\r\n    },\r\n    setTimeDiff(val){\r\n      timeDiff=val\r\n    }\r\n }));\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    WorldWind.Logger.setLoggingLevel(WorldWind.Logger.LEVEL_WARNING);\r\n    wwd = new WorldWind.WorldWindow(containerRef.current);\r\n    animator=new WorldWind.GoToAnimator(wwd)\r\n    var bMNGOneImageLayer = new WorldWind.BMNGOneImageLayer();\r\n    var bMNGLayer=new WorldWind.BMNGLayer()\r\n    var bMNGLandSatLayer=new WorldWind.BMNGLandsatLayer();\r\n    var atmosphereLayer = new WorldWind.AtmosphereLayer(require('../assets/starfield.png'));\r\n    var starFieldLayer=new WorldWind.StarFieldLayer()\r\n\r\n    var layers = [\r\n        {layer:bMNGOneImageLayer,enabled:true},\r\n        {layer:bMNGLayer,enabled:true},\r\n        {layer:bMNGLandSatLayer,enabled:true},\r\n        {layer:starFieldLayer,enabled:true},\r\n        {layer:atmosphereLayer,enabled:true},\r\n        {layer: new WorldWind.ViewControlsLayer(wwd), enabled: true}\r\n    ];\r\n\r\n    for (var l = 0; l < layers.length; l++) {\r\n        layers[l].layer.enabled = layers[l].enabled;\r\n        wwd.addLayer(layers[l].layer);\r\n    }\r\n        atmosphereLayer.time = Date.now()+timeDiff;\r\n        function runSimulation() {\r\n            atmosphereLayer.time = new Date(Date.now()+timeDiff)\r\n            wwd.redraw();\r\n            requestAnimationFrame(runSimulation);\r\n        }\r\n        requestAnimationFrame(runSimulation);\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(satCode) {\r\n      interval = setInterval(() => {\r\n        var currData=getSatelliteInfo(tle,Date.now()+timeDiff,23.762397,90.418917)\r\n        wwd.goTo(new WorldWind.Position(currData.lat,currData.lng,currData.height*1000));\r\n\r\n      }, 100);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n  },[satCode])\r\n\r\n  return(\r\n    <canvas ref={containerRef} className='globeBg' style={{ backgroundColor:'#000000',width: \"100%\", height: \"100%\" }}/>\r\n  )\r\n})\r\n\r\nexport default FPVView\r\n"]},"metadata":{},"sourceType":"module"}