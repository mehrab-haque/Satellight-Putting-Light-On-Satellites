{"ast":null,"code":"import GeometryElementsArray from './geometry-elements-array';\nimport Element from './element';\nimport paintable from '../mixins/paintable';\nimport measurable from '../mixins/measurable';\nimport Arc from '../geometry/arc';\nimport Rect from '../geometry/rect';\nimport Segment from '../geometry/segment';\nimport Point from '../geometry/point';\nimport Size from '../geometry/size';\nimport lineIntersectionsCount from '../geometry/math/line-intersections-count';\nimport { defined, last, rad } from '../util';\nimport parsePath from '../parsing/parse-path';\nimport elementsBoundingBox from './utils/elements-bounding-box';\nimport elementsClippedBoundingBox from './utils/elements-clippend-bounding-box';\nexport var Path = function (superclass) {\n  function Path(options) {\n    superclass.call(this, options);\n    this.segments = new GeometryElementsArray();\n    this.segments.addObserver(this);\n\n    if (!defined(this.options.stroke)) {\n      this.stroke(\"#000\");\n\n      if (!defined(this.options.stroke.lineJoin)) {\n        this.options.set(\"stroke.lineJoin\", \"miter\");\n      }\n    }\n  }\n\n  if (superclass) Path.__proto__ = superclass;\n  Path.prototype = Object.create(superclass && superclass.prototype);\n  Path.prototype.constructor = Path;\n  var prototypeAccessors = {\n    nodeType: {\n      configurable: true\n    }\n  };\n\n  Path.parse = function parse(str, options) {\n    return MultiPath.parse(str, options);\n  };\n\n  prototypeAccessors.nodeType.get = function () {\n    return \"Path\";\n  };\n\n  Path.prototype.moveTo = function moveTo(x, y) {\n    this.suspend();\n    this.segments.elements([]);\n    this.resume();\n    this.lineTo(x, y);\n    return this;\n  };\n\n  Path.prototype.lineTo = function lineTo(x, y) {\n    var point = defined(y) ? new Point(x, y) : x;\n    var segment = new Segment(point);\n    this.segments.push(segment);\n    return this;\n  };\n\n  Path.prototype.curveTo = function curveTo(controlOut, controlIn, point) {\n    if (this.segments.length > 0) {\n      var lastSegment = last(this.segments);\n      var segment = new Segment(point, controlIn);\n      this.suspend();\n      lastSegment.controlOut(controlOut);\n      this.resume();\n      this.segments.push(segment);\n    }\n\n    return this;\n  };\n\n  Path.prototype.arc = function arc(startAngle, endAngle, radiusX, radiusY, anticlockwise) {\n    if (this.segments.length > 0) {\n      var lastSegment = last(this.segments);\n      var anchor = lastSegment.anchor();\n      var start = rad(startAngle);\n      var center = new Point(anchor.x - radiusX * Math.cos(start), anchor.y - radiusY * Math.sin(start));\n      var arc = new Arc(center, {\n        startAngle: startAngle,\n        endAngle: endAngle,\n        radiusX: radiusX,\n        radiusY: radiusY,\n        anticlockwise: anticlockwise\n      });\n\n      this._addArcSegments(arc);\n    }\n\n    return this;\n  };\n\n  Path.prototype.arcTo = function arcTo(end, rx, ry, largeArc, swipe, rotation) {\n    if (this.segments.length > 0) {\n      var lastSegment = last(this.segments);\n      var anchor = lastSegment.anchor();\n      var arc = Arc.fromPoints(anchor, end, rx, ry, largeArc, swipe, rotation);\n\n      this._addArcSegments(arc);\n    }\n\n    return this;\n  };\n\n  Path.prototype._addArcSegments = function _addArcSegments(arc) {\n    var this$1 = this;\n    this.suspend();\n    var curvePoints = arc.curvePoints();\n\n    for (var i = 1; i < curvePoints.length; i += 3) {\n      this$1.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n    }\n\n    this.resume();\n    this.geometryChange();\n  };\n\n  Path.prototype.close = function close() {\n    this.options.closed = true;\n    this.geometryChange();\n    return this;\n  };\n\n  Path.prototype.rawBBox = function rawBBox() {\n    return this._bbox();\n  };\n\n  Path.prototype._containsPoint = function _containsPoint(point) {\n    var segments = this.segments;\n    var length = segments.length;\n    var intersectionsCount = 0;\n    var previous, current;\n\n    for (var idx = 1; idx < length; idx++) {\n      previous = segments[idx - 1];\n      current = segments[idx];\n      intersectionsCount += previous._intersectionsTo(current, point);\n    }\n\n    if (this.options.closed || !segments[0].anchor().equals(segments[length - 1].anchor())) {\n      intersectionsCount += lineIntersectionsCount(segments[0].anchor(), segments[length - 1].anchor(), point);\n    }\n\n    return intersectionsCount % 2 !== 0;\n  };\n\n  Path.prototype._isOnPath = function _isOnPath(point, width) {\n    var segments = this.segments;\n    var length = segments.length;\n    var pathWidth = width || this.options.stroke.width;\n\n    if (length > 1) {\n      if (segments[0]._isOnPathTo(segments[1], point, pathWidth, \"start\")) {\n        return true;\n      }\n\n      for (var idx = 2; idx <= length - 2; idx++) {\n        if (segments[idx - 1]._isOnPathTo(segments[idx], point, pathWidth)) {\n          return true;\n        }\n      }\n\n      if (segments[length - 2]._isOnPathTo(segments[length - 1], point, pathWidth, \"end\")) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Path.prototype._bbox = function _bbox(matrix) {\n    var segments = this.segments;\n    var length = segments.length;\n    var boundingBox;\n\n    if (length === 1) {\n      var anchor = segments[0].anchor().transformCopy(matrix);\n      boundingBox = new Rect(anchor, Size.ZERO);\n    } else if (length > 0) {\n      for (var i = 1; i < length; i++) {\n        var segmentBox = segments[i - 1].bboxTo(segments[i], matrix);\n\n        if (boundingBox) {\n          boundingBox = Rect.union(boundingBox, segmentBox);\n        } else {\n          boundingBox = segmentBox;\n        }\n      }\n    }\n\n    return boundingBox;\n  };\n\n  Path.fromRect = function fromRect(rect, options) {\n    return new Path(options).moveTo(rect.topLeft()).lineTo(rect.topRight()).lineTo(rect.bottomRight()).lineTo(rect.bottomLeft()).close();\n  };\n\n  Path.fromPoints = function fromPoints(points, options) {\n    if (points) {\n      var path = new Path(options);\n\n      for (var i = 0; i < points.length; i++) {\n        var point = Point.create(points[i]);\n\n        if (point) {\n          if (i === 0) {\n            path.moveTo(point);\n          } else {\n            path.lineTo(point);\n          }\n        }\n      }\n\n      return path;\n    }\n  };\n\n  Path.fromArc = function fromArc(arc, options) {\n    var path = new Path(options);\n    var startAngle = arc.startAngle;\n    var start = arc.pointAt(startAngle);\n    path.moveTo(start.x, start.y);\n    path.arc(startAngle, arc.endAngle, arc.radiusX, arc.radiusY, arc.anticlockwise);\n    return path;\n  };\n\n  Object.defineProperties(Path.prototype, prototypeAccessors);\n  return Path;\n}(paintable(measurable(Element)));\nexport var MultiPath = function (superclass) {\n  function MultiPath(options) {\n    superclass.call(this, options);\n    this.paths = new GeometryElementsArray();\n    this.paths.addObserver(this);\n\n    if (!defined(this.options.stroke)) {\n      this.stroke(\"#000\");\n    }\n  }\n\n  if (superclass) MultiPath.__proto__ = superclass;\n  MultiPath.prototype = Object.create(superclass && superclass.prototype);\n  MultiPath.prototype.constructor = MultiPath;\n  var prototypeAccessors$1 = {\n    nodeType: {\n      configurable: true\n    }\n  };\n\n  MultiPath.parse = function parse(str, options) {\n    var instance = new MultiPath(options);\n    return parsePath(instance, str);\n  };\n\n  prototypeAccessors$1.nodeType.get = function () {\n    return \"MultiPath\";\n  };\n\n  MultiPath.prototype.moveTo = function moveTo(x, y) {\n    var path = new Path();\n    path.moveTo(x, y);\n    this.paths.push(path);\n    return this;\n  };\n\n  MultiPath.prototype.lineTo = function lineTo(x, y) {\n    if (this.paths.length > 0) {\n      last(this.paths).lineTo(x, y);\n    }\n\n    return this;\n  };\n\n  MultiPath.prototype.curveTo = function curveTo(controlOut, controlIn, point) {\n    if (this.paths.length > 0) {\n      last(this.paths).curveTo(controlOut, controlIn, point);\n    }\n\n    return this;\n  };\n\n  MultiPath.prototype.arc = function arc(startAngle, endAngle, radiusX, radiusY, anticlockwise) {\n    if (this.paths.length > 0) {\n      last(this.paths).arc(startAngle, endAngle, radiusX, radiusY, anticlockwise);\n    }\n\n    return this;\n  };\n\n  MultiPath.prototype.arcTo = function arcTo(end, rx, ry, largeArc, swipe, rotation) {\n    if (this.paths.length > 0) {\n      last(this.paths).arcTo(end, rx, ry, largeArc, swipe, rotation);\n    }\n\n    return this;\n  };\n\n  MultiPath.prototype.close = function close() {\n    if (this.paths.length > 0) {\n      last(this.paths).close();\n    }\n\n    return this;\n  };\n\n  MultiPath.prototype._bbox = function _bbox(matrix) {\n    return elementsBoundingBox(this.paths, true, matrix);\n  };\n\n  MultiPath.prototype.rawBBox = function rawBBox() {\n    return elementsBoundingBox(this.paths, false);\n  };\n\n  MultiPath.prototype._containsPoint = function _containsPoint(point) {\n    var paths = this.paths;\n\n    for (var idx = 0; idx < paths.length; idx++) {\n      if (paths[idx]._containsPoint(point)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  MultiPath.prototype._isOnPath = function _isOnPath(point) {\n    var paths = this.paths;\n    var width = this.options.stroke.width;\n\n    for (var idx = 0; idx < paths.length; idx++) {\n      if (paths[idx]._isOnPath(point, width)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  MultiPath.prototype._clippedBBox = function _clippedBBox(transformation) {\n    return elementsClippedBoundingBox(this.paths, this.currentTransform(transformation));\n  };\n\n  Object.defineProperties(MultiPath.prototype, prototypeAccessors$1);\n  return MultiPath;\n}(paintable(measurable(Element)));","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/node_modules/@progress/kendo-drawing/dist/es/shapes/path.js"],"names":["GeometryElementsArray","Element","paintable","measurable","Arc","Rect","Segment","Point","Size","lineIntersectionsCount","defined","last","rad","parsePath","elementsBoundingBox","elementsClippedBoundingBox","Path","superclass","options","call","segments","addObserver","stroke","lineJoin","set","__proto__","prototype","Object","create","constructor","prototypeAccessors","nodeType","configurable","parse","str","MultiPath","get","moveTo","x","y","suspend","elements","resume","lineTo","point","segment","push","curveTo","controlOut","controlIn","length","lastSegment","arc","startAngle","endAngle","radiusX","radiusY","anticlockwise","anchor","start","center","Math","cos","sin","_addArcSegments","arcTo","end","rx","ry","largeArc","swipe","rotation","fromPoints","this$1","curvePoints","i","geometryChange","close","closed","rawBBox","_bbox","_containsPoint","intersectionsCount","previous","current","idx","_intersectionsTo","equals","_isOnPath","width","pathWidth","_isOnPathTo","matrix","boundingBox","transformCopy","ZERO","segmentBox","bboxTo","union","fromRect","rect","topLeft","topRight","bottomRight","bottomLeft","points","path","fromArc","pointAt","defineProperties","paths","prototypeAccessors$1","instance","_clippedBBox","transformation","currentTransform"],"mappings":"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","sourcesContent":["import GeometryElementsArray from './geometry-elements-array';\nimport Element from './element';\nimport paintable from '../mixins/paintable';\nimport measurable from '../mixins/measurable';\nimport Arc from '../geometry/arc';\nimport Rect from '../geometry/rect';\nimport Segment from '../geometry/segment';\nimport Point from '../geometry/point';\nimport Size from '../geometry/size';\nimport lineIntersectionsCount from '../geometry/math/line-intersections-count';\nimport { defined, last, rad } from '../util';\nimport parsePath from '../parsing/parse-path';\nimport elementsBoundingBox from './utils/elements-bounding-box';\nimport elementsClippedBoundingBox from './utils/elements-clippend-bounding-box';\n\n\nexport var Path = (function (superclass) {\n    function Path(options) {\n        superclass.call(this, options);\n        this.segments = new GeometryElementsArray();\n        this.segments.addObserver(this);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke(\"#000\");\n\n            if (!defined(this.options.stroke.lineJoin)) {\n                this.options.set(\"stroke.lineJoin\", \"miter\");\n            }\n        }\n    }\n\n    if ( superclass ) Path.__proto__ = superclass;\n    Path.prototype = Object.create( superclass && superclass.prototype );\n    Path.prototype.constructor = Path;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\n\n    Path.parse = function parse (str, options) {\n        return MultiPath.parse(str, options);\n    };\n\n    prototypeAccessors.nodeType.get = function () {\n        return \"Path\";\n    };\n\n    Path.prototype.moveTo = function moveTo (x, y) {\n        this.suspend();\n        this.segments.elements([]);\n        this.resume();\n\n        this.lineTo(x, y);\n\n        return this;\n    };\n\n    Path.prototype.lineTo = function lineTo (x, y) {\n        var point = defined(y) ? new Point(x, y) : x;\n        var segment = new Segment(point);\n\n        this.segments.push(segment);\n\n        return this;\n    };\n\n    Path.prototype.curveTo = function curveTo (controlOut, controlIn, point) {\n        if (this.segments.length > 0) {\n            var lastSegment = last(this.segments);\n            var segment = new Segment(point, controlIn);\n            this.suspend();\n            lastSegment.controlOut(controlOut);\n            this.resume();\n\n            this.segments.push(segment);\n        }\n\n        return this;\n    };\n\n    Path.prototype.arc = function arc (startAngle, endAngle, radiusX, radiusY, anticlockwise) {\n        if (this.segments.length > 0) {\n            var lastSegment = last(this.segments);\n            var anchor = lastSegment.anchor();\n            var start = rad(startAngle);\n            var center = new Point(anchor.x - radiusX * Math.cos(start),\n                anchor.y - radiusY * Math.sin(start));\n            var arc = new Arc(center, {\n                startAngle: startAngle,\n                endAngle: endAngle,\n                radiusX: radiusX,\n                radiusY: radiusY,\n                anticlockwise: anticlockwise\n            });\n\n            this._addArcSegments(arc);\n        }\n\n        return this;\n    };\n\n    Path.prototype.arcTo = function arcTo (end, rx, ry, largeArc, swipe, rotation) {\n        if (this.segments.length > 0) {\n            var lastSegment = last(this.segments);\n            var anchor = lastSegment.anchor();\n            var arc = Arc.fromPoints(anchor, end, rx, ry, largeArc, swipe, rotation);\n\n            this._addArcSegments(arc);\n        }\n        return this;\n    };\n\n    Path.prototype._addArcSegments = function _addArcSegments (arc) {\n        var this$1 = this;\n\n        this.suspend();\n\n        var curvePoints = arc.curvePoints();\n\n        for (var i = 1; i < curvePoints.length; i += 3) {\n            this$1.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n        }\n\n        this.resume();\n        this.geometryChange();\n    };\n\n    Path.prototype.close = function close () {\n        this.options.closed = true;\n        this.geometryChange();\n\n        return this;\n    };\n\n    Path.prototype.rawBBox = function rawBBox () {\n        return this._bbox();\n    };\n\n    Path.prototype._containsPoint = function _containsPoint (point) {\n        var segments = this.segments;\n        var length = segments.length;\n        var intersectionsCount = 0;\n        var previous, current;\n\n        for (var idx = 1; idx < length; idx++) {\n            previous = segments[idx - 1];\n            current = segments[idx];\n            intersectionsCount += previous._intersectionsTo(current, point);\n        }\n\n        if (this.options.closed || !segments[0].anchor().equals(segments[length - 1].anchor())) {\n            intersectionsCount += lineIntersectionsCount(segments[0].anchor(), segments[length - 1].anchor(), point);\n        }\n\n        return intersectionsCount % 2 !== 0;\n    };\n\n    Path.prototype._isOnPath = function _isOnPath (point, width) {\n        var segments = this.segments;\n        var length = segments.length;\n        var pathWidth = width || this.options.stroke.width;\n\n        if (length > 1) {\n            if (segments[0]._isOnPathTo(segments[1], point, pathWidth, \"start\")) {\n                return true;\n            }\n\n            for (var idx = 2; idx <= length - 2; idx++) {\n                if (segments[idx - 1]._isOnPathTo(segments[idx], point, pathWidth)) {\n                    return true;\n                }\n            }\n\n            if (segments[length - 2]._isOnPathTo(segments[length - 1], point, pathWidth, \"end\")) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    Path.prototype._bbox = function _bbox (matrix) {\n        var segments = this.segments;\n        var length = segments.length;\n        var boundingBox;\n\n        if (length === 1) {\n            var anchor = segments[0].anchor().transformCopy(matrix);\n            boundingBox = new Rect(anchor, Size.ZERO);\n        } else if (length > 0) {\n            for (var i = 1; i < length; i++) {\n                var segmentBox = segments[i - 1].bboxTo(segments[i], matrix);\n                if (boundingBox) {\n                    boundingBox = Rect.union(boundingBox, segmentBox);\n                } else {\n                    boundingBox = segmentBox;\n                }\n            }\n        }\n\n        return boundingBox;\n    };\n\n    Path.fromRect = function fromRect (rect, options) {\n        return new Path(options)\n            .moveTo(rect.topLeft())\n            .lineTo(rect.topRight())\n            .lineTo(rect.bottomRight())\n            .lineTo(rect.bottomLeft())\n            .close();\n    };\n\n    Path.fromPoints = function fromPoints (points, options) {\n        if (points) {\n            var path = new Path(options);\n\n            for (var i = 0; i < points.length; i++) {\n                var point = Point.create(points[i]);\n                if (point) {\n                    if (i === 0) {\n                        path.moveTo(point);\n                    } else {\n                        path.lineTo(point);\n                    }\n                }\n            }\n\n            return path;\n        }\n    };\n\n    Path.fromArc = function fromArc (arc, options) {\n        var path = new Path(options);\n        var startAngle = arc.startAngle;\n        var start = arc.pointAt(startAngle);\n        path.moveTo(start.x, start.y);\n        path.arc(startAngle, arc.endAngle, arc.radiusX, arc.radiusY, arc.anticlockwise);\n        return path;\n    };\n\n    Object.defineProperties( Path.prototype, prototypeAccessors );\n\n    return Path;\n}(paintable(measurable(Element))));\n\nexport var MultiPath = (function (superclass) {\n    function MultiPath(options) {\n        superclass.call(this, options);\n        this.paths = new GeometryElementsArray();\n        this.paths.addObserver(this);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke(\"#000\");\n        }\n    }\n\n    if ( superclass ) MultiPath.__proto__ = superclass;\n    MultiPath.prototype = Object.create( superclass && superclass.prototype );\n    MultiPath.prototype.constructor = MultiPath;\n\n    var prototypeAccessors$1 = { nodeType: { configurable: true } };\n\n    MultiPath.parse = function parse (str, options) {\n        var instance = new MultiPath(options);\n        return parsePath(instance, str);\n    };\n\n    prototypeAccessors$1.nodeType.get = function () {\n        return \"MultiPath\";\n    };\n\n    MultiPath.prototype.moveTo = function moveTo (x, y) {\n        var path = new Path();\n        path.moveTo(x, y);\n\n        this.paths.push(path);\n\n        return this;\n    };\n\n    MultiPath.prototype.lineTo = function lineTo (x, y) {\n        if (this.paths.length > 0) {\n            last(this.paths).lineTo(x, y);\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype.curveTo = function curveTo (controlOut, controlIn, point) {\n        if (this.paths.length > 0) {\n            last(this.paths).curveTo(controlOut, controlIn, point);\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype.arc = function arc (startAngle, endAngle, radiusX, radiusY, anticlockwise) {\n        if (this.paths.length > 0) {\n            last(this.paths).arc(startAngle, endAngle, radiusX, radiusY, anticlockwise);\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype.arcTo = function arcTo (end, rx, ry, largeArc, swipe, rotation) {\n        if (this.paths.length > 0) {\n            last(this.paths).arcTo(end, rx, ry, largeArc, swipe, rotation);\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype.close = function close () {\n        if (this.paths.length > 0) {\n            last(this.paths).close();\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype._bbox = function _bbox (matrix) {\n        return elementsBoundingBox(this.paths, true, matrix);\n    };\n\n    MultiPath.prototype.rawBBox = function rawBBox () {\n        return elementsBoundingBox(this.paths, false);\n    };\n\n    MultiPath.prototype._containsPoint = function _containsPoint (point) {\n        var paths = this.paths;\n\n        for (var idx = 0; idx < paths.length; idx++) {\n            if (paths[idx]._containsPoint(point)) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    MultiPath.prototype._isOnPath = function _isOnPath (point) {\n        var paths = this.paths;\n        var width = this.options.stroke.width;\n\n        for (var idx = 0; idx < paths.length; idx++) {\n            if (paths[idx]._isOnPath(point, width)) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    MultiPath.prototype._clippedBBox = function _clippedBBox (transformation) {\n        return elementsClippedBoundingBox(this.paths, this.currentTransform(transformation));\n    };\n\n    Object.defineProperties( MultiPath.prototype, prototypeAccessors$1 );\n\n    return MultiPath;\n}(paintable(measurable(Element))));\n\n"]},"metadata":{},"sourceType":"module"}