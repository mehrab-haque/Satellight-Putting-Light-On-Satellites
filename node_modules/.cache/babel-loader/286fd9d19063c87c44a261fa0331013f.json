{"ast":null,"code":"import Node from './node';\nimport traversable from '../mixins/traversable';\nimport NODE_MAP from './node-map';\n\nvar GroupNode = function (superclass) {\n  function GroupNode() {\n    superclass.apply(this, arguments);\n  }\n\n  if (superclass) GroupNode.__proto__ = superclass;\n  GroupNode.prototype = Object.create(superclass && superclass.prototype);\n  GroupNode.prototype.constructor = GroupNode;\n\n  GroupNode.prototype.renderTo = function renderTo(ctx) {\n    if (!this.visible()) {\n      return;\n    }\n\n    ctx.save();\n    this.setTransform(ctx);\n    this.setClip(ctx);\n    this.setOpacity(ctx);\n    var childNodes = this.childNodes;\n\n    for (var i = 0; i < childNodes.length; i++) {\n      var child = childNodes[i];\n\n      if (child.visible()) {\n        child.renderTo(ctx);\n      }\n    }\n\n    ctx.restore();\n  };\n\n  return GroupNode;\n}(traversable(Node, \"childNodes\"));\n\nNODE_MAP.Group = GroupNode;\nexport default GroupNode;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/node_modules/@progress/kendo-drawing/dist/es/canvas/group-node.js"],"names":["Node","traversable","NODE_MAP","GroupNode","superclass","apply","arguments","__proto__","prototype","Object","create","constructor","renderTo","ctx","visible","save","setTransform","setClip","setOpacity","childNodes","i","length","child","restore","Group"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,IAAIC,SAAS,GAAI,UAAUC,UAAV,EAAsB;AACnC,WAASD,SAAT,GAAsB;AAClBC,IAAAA,UAAU,CAACC,KAAX,CAAiB,IAAjB,EAAuBC,SAAvB;AACH;;AAED,MAAKF,UAAL,EAAkBD,SAAS,CAACI,SAAV,GAAsBH,UAAtB;AAClBD,EAAAA,SAAS,CAACK,SAAV,GAAsBC,MAAM,CAACC,MAAP,CAAeN,UAAU,IAAIA,UAAU,CAACI,SAAxC,CAAtB;AACAL,EAAAA,SAAS,CAACK,SAAV,CAAoBG,WAApB,GAAkCR,SAAlC;;AAEAA,EAAAA,SAAS,CAACK,SAAV,CAAoBI,QAApB,GAA+B,SAASA,QAAT,CAAmBC,GAAnB,EAAwB;AACnD,QAAI,CAAC,KAAKC,OAAL,EAAL,EAAqB;AACjB;AACH;;AAEDD,IAAAA,GAAG,CAACE,IAAJ;AAEA,SAAKC,YAAL,CAAkBH,GAAlB;AACA,SAAKI,OAAL,CAAaJ,GAAb;AACA,SAAKK,UAAL,CAAgBL,GAAhB;AAEA,QAAIM,UAAU,GAAG,KAAKA,UAAtB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,UAAIE,KAAK,GAAGH,UAAU,CAACC,CAAD,CAAtB;;AACA,UAAIE,KAAK,CAACR,OAAN,EAAJ,EAAqB;AACjBQ,QAAAA,KAAK,CAACV,QAAN,CAAeC,GAAf;AACH;AACJ;;AAEDA,IAAAA,GAAG,CAACU,OAAJ;AACH,GApBD;;AAsBA,SAAOpB,SAAP;AACH,CAhCgB,CAgCfF,WAAW,CAACD,IAAD,EAAO,YAAP,CAhCI,CAAjB;;AAkCAE,QAAQ,CAACsB,KAAT,GAAiBrB,SAAjB;AAEA,eAAeA,SAAf","sourcesContent":["import Node from './node';\nimport traversable from '../mixins/traversable';\nimport NODE_MAP from './node-map';\n\n\nvar GroupNode = (function (superclass) {\n    function GroupNode () {\n        superclass.apply(this, arguments);\n    }\n\n    if ( superclass ) GroupNode.__proto__ = superclass;\n    GroupNode.prototype = Object.create( superclass && superclass.prototype );\n    GroupNode.prototype.constructor = GroupNode;\n\n    GroupNode.prototype.renderTo = function renderTo (ctx) {\n        if (!this.visible()) {\n            return;\n        }\n\n        ctx.save();\n\n        this.setTransform(ctx);\n        this.setClip(ctx);\n        this.setOpacity(ctx);\n\n        var childNodes = this.childNodes;\n        for (var i = 0; i < childNodes.length; i++) {\n            var child = childNodes[i];\n            if (child.visible()) {\n                child.renderTo(ctx);\n            }\n        }\n\n        ctx.restore();\n    };\n\n    return GroupNode;\n}(traversable(Node, \"childNodes\")));\n\nNODE_MAP.Group = GroupNode;\n\nexport default GroupNode;\n"]},"metadata":{},"sourceType":"module"}