{"ast":null,"code":"import GeometryArc from '../geometry/arc';\nimport Element from './element';\nimport { Path } from './path';\nimport paintable from '../mixins/paintable';\nimport measurable from '../mixins/measurable';\nimport withGeometry from '../mixins/with-geometry';\nimport { defined } from '../util';\nvar DEFAULT_STROKE = \"#000\";\n\nvar Arc = function (superclass) {\n  function Arc(geometry, options) {\n    if (geometry === void 0) geometry = new GeometryArc();\n    if (options === void 0) options = {};\n    superclass.call(this, options);\n    this.geometry(geometry);\n\n    if (!defined(this.options.stroke)) {\n      this.stroke(DEFAULT_STROKE);\n    }\n  }\n\n  if (superclass) Arc.__proto__ = superclass;\n  Arc.prototype = Object.create(superclass && superclass.prototype);\n  Arc.prototype.constructor = Arc;\n  var prototypeAccessors = {\n    nodeType: {\n      configurable: true\n    }\n  };\n\n  prototypeAccessors.nodeType.get = function () {\n    return \"Arc\";\n  };\n\n  Arc.prototype._bbox = function _bbox(matrix) {\n    return this._geometry.bbox(matrix);\n  };\n\n  Arc.prototype.rawBBox = function rawBBox() {\n    return this.geometry().bbox();\n  };\n\n  Arc.prototype.toPath = function toPath() {\n    var path = new Path();\n    var curvePoints = this.geometry().curvePoints();\n\n    if (curvePoints.length > 0) {\n      path.moveTo(curvePoints[0].x, curvePoints[0].y);\n\n      for (var i = 1; i < curvePoints.length; i += 3) {\n        path.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n      }\n    }\n\n    return path;\n  };\n\n  Arc.prototype._containsPoint = function _containsPoint(point) {\n    return this.geometry().containsPoint(point);\n  };\n\n  Arc.prototype._isOnPath = function _isOnPath(point) {\n    return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n  };\n\n  Object.defineProperties(Arc.prototype, prototypeAccessors);\n  return Arc;\n}(paintable(measurable(withGeometry(Element))));\n\nexport default Arc;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/node_modules/@progress/kendo-drawing/dist/es/shapes/arc.js"],"names":["GeometryArc","Element","Path","paintable","measurable","withGeometry","defined","DEFAULT_STROKE","Arc","superclass","geometry","options","call","stroke","__proto__","prototype","Object","create","constructor","prototypeAccessors","nodeType","configurable","get","_bbox","matrix","_geometry","bbox","rawBBox","toPath","path","curvePoints","length","moveTo","x","y","i","curveTo","_containsPoint","point","containsPoint","_isOnPath","width","defineProperties"],"mappings":"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","sourcesContent":["import GeometryArc from '../geometry/arc';\nimport Element from './element';\nimport { Path } from './path';\nimport paintable from '../mixins/paintable';\nimport measurable from '../mixins/measurable';\nimport withGeometry from '../mixins/with-geometry';\nimport { defined } from '../util';\n\n\nvar DEFAULT_STROKE = \"#000\";\n\nvar Arc = (function (superclass) {\n    function Arc(geometry, options) {\n        if ( geometry === void 0 ) geometry = new GeometryArc();\n        if ( options === void 0 ) options = {};\n\n        superclass.call(this, options);\n\n        this.geometry(geometry);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke(DEFAULT_STROKE);\n        }\n    }\n\n    if ( superclass ) Arc.__proto__ = superclass;\n    Arc.prototype = Object.create( superclass && superclass.prototype );\n    Arc.prototype.constructor = Arc;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\n\n    prototypeAccessors.nodeType.get = function () {\n        return \"Arc\";\n    };\n\n    Arc.prototype._bbox = function _bbox (matrix) {\n        return this._geometry.bbox(matrix);\n    };\n\n    Arc.prototype.rawBBox = function rawBBox () {\n        return this.geometry().bbox();\n    };\n\n    Arc.prototype.toPath = function toPath () {\n        var path = new Path();\n        var curvePoints = this.geometry().curvePoints();\n\n        if (curvePoints.length > 0) {\n            path.moveTo(curvePoints[0].x, curvePoints[0].y);\n\n            for (var i = 1; i < curvePoints.length; i += 3) {\n                path.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n            }\n        }\n\n        return path;\n    };\n\n    Arc.prototype._containsPoint = function _containsPoint (point) {\n        return this.geometry().containsPoint(point);\n    };\n\n    Arc.prototype._isOnPath = function _isOnPath (point) {\n        return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n    };\n\n    Object.defineProperties( Arc.prototype, prototypeAccessors );\n\n    return Arc;\n}(paintable(measurable(withGeometry(Element)))));\n\nexport default Arc;\n"]},"metadata":{},"sourceType":"module"}