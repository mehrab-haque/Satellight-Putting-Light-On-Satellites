{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Md. Mehrab Haque\\\\Desktop\\\\satellight\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,createRef,useRef,useEffect,forwardRef,useImperativeHandle}from'react';import{getSatelliteInfo}from\"tle.js\";import WorldWind from'@nasaworldwind/worldwind';import{sat_data}from'../assets/master';var wwd,timeDiff,textLayer,textAttributes,geoGraphicText,animator,interval,map,marker,infoWindow,polyLine,poly=[],tle,data,locationVar=null;var FPVView=forwardRef(function(props,ref){if(props.location!=null)locationVar=props.location;tle=[props.data.tle_line1,props.data.tle_line2];timeDiff=props.timeDiff;var initData=getSatelliteInfo(tle,Date.now()+timeDiff,23.762397,90.418917);var containerRef=useRef();var _useState=useState(props.satCode),_useState2=_slicedToArray(_useState,2),satCode=_useState2[0],setSatCode=_useState2[1];var _useState3=useState(initData),_useState4=_slicedToArray(_useState3,2),satData=_useState4[0],setSatData=_useState4[1];var _useState5=useState(Date.now()+timeDiff),_useState6=_slicedToArray(_useState5,2),timestamp=_useState6[0],setTimestamp=_useState6[1];var _useState7=useState(locationVar),_useState8=_slicedToArray(_useState7,2),location=_useState8[0],setLocation=_useState8[1];useImperativeHandle(ref,function(){return{setSatellite:function setSatellite(sat){setSatData(sat.data);setSatCode(sat.satCode);},setTimeDiff:function setTimeDiff(val){timeDiff=val;},location:function location(loc){setLocation(loc);}};});useEffect(function(){WorldWind.Logger.setLoggingLevel(WorldWind.Logger.LEVEL_WARNING);wwd=new WorldWind.WorldWindow(containerRef.current);animator=new WorldWind.GoToAnimator(wwd);var bMNGOneImageLayer=new WorldWind.BMNGOneImageLayer();var bMNGLayer=new WorldWind.BMNGLayer();var bMNGLandSatLayer=new WorldWind.BMNGLandsatLayer();var atmosphereLayer=new WorldWind.AtmosphereLayer(require('../assets/starfield.png'));var layers=[{layer:bMNGOneImageLayer,enabled:true},{layer:bMNGLayer,enabled:true},{layer:bMNGLandSatLayer,enabled:true},{layer:atmosphereLayer,enabled:true},{layer:new WorldWind.ViewControlsLayer(wwd),enabled:true}];for(var l=0;l<layers.length;l++){layers[l].layer.enabled=layers[l].enabled;wwd.addLayer(layers[l].layer);}textAttributes=new WorldWind.TextAttributes(null);textAttributes.color=WorldWind.Color.GREEN;textAttributes.depthTest=false;textLayer=new WorldWind.RenderableLayer(\"Your Location\");wwd.addLayer(textLayer);atmosphereLayer.time=Date.now()+timeDiff;function runSimulation(){atmosphereLayer.time=new Date(Date.now()+timeDiff);wwd.redraw();requestAnimationFrame(runSimulation);}requestAnimationFrame(runSimulation);},[]);useEffect(function(){if(location!=null){var peakPosition=new WorldWind.Position(location.lat,location.lng,0);geoGraphicText=new WorldWind.GeographicText(peakPosition,'Your Location');geoGraphicText.attributes=textAttributes;textLayer.removeAllRenderables();textLayer.addRenderable(geoGraphicText);}},[location]);useEffect(function(){if(satCode){interval=setInterval(function(){var currData=getSatelliteInfo(tle,Date.now()+timeDiff,23.762397,90.418917);wwd.goTo(new WorldWind.Position(currData.lat,currData.lng,currData.height*1000));setTimestamp(Date.now()+timeDiff);setSatData(currData);},100);}else{clearInterval(interval);}},[satCode]);return/*#__PURE__*/React.createElement(\"div\",{style:{width:'100%',height:'100%'}},/*#__PURE__*/React.createElement(\"div\",{style:{color:'#00ff00',backgroundColor:'#00000088',position:'absolute',left:'50%',padding:'5px'}},sat_data[satCode].sat_name,\" \",sat_data[satCode].country_name,\" \",satData.lat!=null&&satData.lat!=undefined?\"Lat:\".concat(satData.lat.toFixed(3),\" Lng:\").concat(satData.lng.toFixed(3),\" Altitude:\").concat(satData.height.toFixed(3),\"km Velocity:\").concat(satData.velocity.toFixed(3),\"km/s \").concat(new Date(timestamp).toLocaleString()):''),/*#__PURE__*/React.createElement(\"canvas\",{ref:containerRef,className:\"globeBg\",style:{backgroundColor:'#000000',width:\"100%\",height:\"100%\"}}));});export default FPVView;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/src/components/FPVView.js"],"names":["React","useState","createRef","useRef","useEffect","forwardRef","useImperativeHandle","getSatelliteInfo","WorldWind","sat_data","wwd","timeDiff","textLayer","textAttributes","geoGraphicText","animator","interval","map","marker","infoWindow","polyLine","poly","tle","data","locationVar","FPVView","props","ref","location","tle_line1","tle_line2","initData","Date","now","containerRef","satCode","setSatCode","satData","setSatData","timestamp","setTimestamp","setLocation","setSatellite","sat","setTimeDiff","val","loc","Logger","setLoggingLevel","LEVEL_WARNING","WorldWindow","current","GoToAnimator","bMNGOneImageLayer","BMNGOneImageLayer","bMNGLayer","BMNGLayer","bMNGLandSatLayer","BMNGLandsatLayer","atmosphereLayer","AtmosphereLayer","require","layers","layer","enabled","ViewControlsLayer","l","length","addLayer","TextAttributes","color","Color","GREEN","depthTest","RenderableLayer","time","runSimulation","redraw","requestAnimationFrame","peakPosition","Position","lat","lng","GeographicText","attributes","removeAllRenderables","addRenderable","setInterval","currData","goTo","height","clearInterval","width","backgroundColor","position","left","padding","sat_name","country_name","undefined","toFixed","velocity","toLocaleString"],"mappings":"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","sourcesContent":["import React,{useState,createRef,useRef,useEffect,forwardRef, useImperativeHandle} from 'react'\r\nimport { getSatelliteInfo } from \"tle.js\";\r\nimport WorldWind from '@nasaworldwind/worldwind'\r\nimport {sat_data} from '../assets/master'\r\n\r\nvar wwd,timeDiff,textLayer,textAttributes,geoGraphicText,animator,interval,map,marker,infoWindow,polyLine,poly=[],tle,data,locationVar=null\r\n\r\nconst FPVView=forwardRef((props,ref)=>{\r\n  if(props.location!=null)locationVar=props.location\r\n  tle=[props.data.tle_line1,props.data.tle_line2]\r\n  timeDiff=props.timeDiff\r\n  var initData=getSatelliteInfo(tle,Date.now()+timeDiff,23.762397,90.418917)\r\n  const containerRef=useRef()\r\n  const [satCode,setSatCode]=useState(props.satCode)\r\n  const [satData,setSatData]=useState(initData)\r\n  const [timestamp,setTimestamp]=useState(Date.now()+timeDiff)\r\n  const [location,setLocation]=useState(locationVar)\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    setSatellite(sat){\r\n      setSatData(sat.data)\r\n      setSatCode(sat.satCode)\r\n    },\r\n    setTimeDiff(val){\r\n      timeDiff=val\r\n    },\r\n    location(loc){\r\n      setLocation(loc)\r\n    }\r\n }));\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    WorldWind.Logger.setLoggingLevel(WorldWind.Logger.LEVEL_WARNING);\r\n    wwd = new WorldWind.WorldWindow(containerRef.current);\r\n    animator=new WorldWind.GoToAnimator(wwd)\r\n    var bMNGOneImageLayer = new WorldWind.BMNGOneImageLayer();\r\n    var bMNGLayer=new WorldWind.BMNGLayer()\r\n    var bMNGLandSatLayer=new WorldWind.BMNGLandsatLayer();\r\n    var atmosphereLayer = new WorldWind.AtmosphereLayer(require('../assets/starfield.png'));\r\n\r\n    var layers = [\r\n        {layer:bMNGOneImageLayer,enabled:true},\r\n        {layer:bMNGLayer,enabled:true},\r\n        {layer:bMNGLandSatLayer,enabled:true},\r\n        {layer:atmosphereLayer,enabled:true},\r\n        {layer: new WorldWind.ViewControlsLayer(wwd), enabled: true}\r\n    ];\r\n\r\n    for (var l = 0; l < layers.length; l++) {\r\n        layers[l].layer.enabled = layers[l].enabled;\r\n        wwd.addLayer(layers[l].layer);\r\n    }\r\n\r\n\r\n    textAttributes= new WorldWind.TextAttributes(null)\r\n    textAttributes.color = WorldWind.Color.GREEN;\r\n    textAttributes.depthTest = false;\r\n    textLayer = new WorldWind.RenderableLayer(\"Your Location\")\r\n    wwd.addLayer(textLayer)\r\n\r\n\r\n        atmosphereLayer.time = Date.now()+timeDiff;\r\n        function runSimulation() {\r\n            atmosphereLayer.time = new Date(Date.now()+timeDiff)\r\n            wwd.redraw();\r\n            requestAnimationFrame(runSimulation);\r\n        }\r\n        requestAnimationFrame(runSimulation);\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(location!=null){\r\n      var peakPosition = new WorldWind.Position(location.lat, location.lng, 0)\r\n      geoGraphicText=new WorldWind.GeographicText(peakPosition, 'Your Location')\r\n      geoGraphicText.attributes = textAttributes\r\n      textLayer.removeAllRenderables()\r\n      textLayer.addRenderable(geoGraphicText)\r\n    }\r\n  },[location])\r\n\r\n  useEffect(()=>{\r\n    if(satCode) {\r\n      interval = setInterval(() => {\r\n        var currData=getSatelliteInfo(tle,Date.now()+timeDiff,23.762397,90.418917)\r\n        wwd.goTo(new WorldWind.Position(currData.lat,currData.lng,currData.height*1000));\r\n        setTimestamp(Date.now()+timeDiff)\r\n        setSatData(currData)\r\n      }, 100);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n  },[satCode])\r\n\r\n  return(\r\n    <div style={{width:'100%',height:'100%'}}>\r\n      <div style={{color:'#00ff00',backgroundColor:'#00000088',position:'absolute',left:'50%',padding:'5px'}}>\r\n        {sat_data[satCode].sat_name} {sat_data[satCode].country_name} {satData.lat!=null && satData.lat!=undefined?`Lat:${satData.lat.toFixed(3)} Lng:${satData.lng.toFixed(3)} Altitude:${satData.height.toFixed(3)}km Velocity:${satData.velocity.toFixed(3)}km/s ${new Date(timestamp).toLocaleString()}`:''}\r\n      </div>\r\n      <canvas ref={containerRef} className='globeBg' style={{ backgroundColor:'#000000',width: \"100%\", height: \"100%\" }}/>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default FPVView\r\n"]},"metadata":{},"sourceType":"module"}