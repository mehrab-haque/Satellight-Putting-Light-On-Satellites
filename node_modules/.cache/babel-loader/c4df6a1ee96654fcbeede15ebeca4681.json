{"ast":null,"code":"import HasObservers from '../core/has-observers';\nimport withAccessors from '../mixins/with-accessors';\nimport { defined, round } from '../util';\n\nvar Size = function (superclass) {\n  function Size(width, height) {\n    superclass.call(this);\n    this.width = width || 0;\n    this.height = height || 0;\n  }\n\n  if (superclass) Size.__proto__ = superclass;\n  Size.prototype = Object.create(superclass && superclass.prototype);\n  Size.prototype.constructor = Size;\n  var staticAccessors = {\n    ZERO: {\n      configurable: true\n    }\n  };\n\n  Size.prototype.equals = function equals(other) {\n    return other && other.width === this.width && other.height === this.height;\n  };\n\n  Size.prototype.clone = function clone() {\n    return new Size(this.width, this.height);\n  };\n\n  Size.prototype.toArray = function toArray(digits) {\n    var doRound = defined(digits);\n    var width = doRound ? round(this.width, digits) : this.width;\n    var height = doRound ? round(this.height, digits) : this.height;\n    return [width, height];\n  };\n\n  Size.create = function create(arg0, arg1) {\n    if (defined(arg0)) {\n      if (arg0 instanceof Size) {\n        return arg0;\n      } else if (arguments.length === 1 && arg0.length === 2) {\n        return new Size(arg0[0], arg0[1]);\n      }\n\n      return new Size(arg0, arg1);\n    }\n  };\n\n  staticAccessors.ZERO.get = function () {\n    return new Size(0, 0);\n  };\n\n  Object.defineProperties(Size, staticAccessors);\n  return Size;\n}(withAccessors(HasObservers, [\"width\", \"height\"]));\n\nexport default Size;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/node_modules/@progress/kendo-drawing/dist/es/geometry/size.js"],"names":["HasObservers","withAccessors","defined","round","Size","superclass","width","height","call","__proto__","prototype","Object","create","constructor","staticAccessors","ZERO","configurable","equals","other","clone","toArray","digits","doRound","arg0","arg1","arguments","length","get","defineProperties"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,SAA/B;;AAGA,IAAIC,IAAI,GAAI,UAAUC,UAAV,EAAsB;AAC9B,WAASD,IAAT,CAAcE,KAAd,EAAqBC,MAArB,EAA6B;AACzBF,IAAAA,UAAU,CAACG,IAAX,CAAgB,IAAhB;AAEA,SAAKF,KAAL,GAAaA,KAAK,IAAI,CAAtB;AACA,SAAKC,MAAL,GAAcA,MAAM,IAAI,CAAxB;AACH;;AAED,MAAKF,UAAL,EAAkBD,IAAI,CAACK,SAAL,GAAiBJ,UAAjB;AAClBD,EAAAA,IAAI,CAACM,SAAL,GAAiBC,MAAM,CAACC,MAAP,CAAeP,UAAU,IAAIA,UAAU,CAACK,SAAxC,CAAjB;AACAN,EAAAA,IAAI,CAACM,SAAL,CAAeG,WAAf,GAA6BT,IAA7B;AAEA,MAAIU,eAAe,GAAG;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AAAR,GAAtB;;AAEAZ,EAAAA,IAAI,CAACM,SAAL,CAAeO,MAAf,GAAwB,SAASA,MAAT,CAAiBC,KAAjB,EAAwB;AAC5C,WAAOA,KAAK,IAAIA,KAAK,CAACZ,KAAN,KAAgB,KAAKA,KAA9B,IAAuCY,KAAK,CAACX,MAAN,KAAiB,KAAKA,MAApE;AACH,GAFD;;AAIAH,EAAAA,IAAI,CAACM,SAAL,CAAeS,KAAf,GAAuB,SAASA,KAAT,GAAkB;AACrC,WAAO,IAAIf,IAAJ,CAAS,KAAKE,KAAd,EAAqB,KAAKC,MAA1B,CAAP;AACH,GAFD;;AAIAH,EAAAA,IAAI,CAACM,SAAL,CAAeU,OAAf,GAAyB,SAASA,OAAT,CAAkBC,MAAlB,EAA0B;AAC/C,QAAIC,OAAO,GAAGpB,OAAO,CAACmB,MAAD,CAArB;AACA,QAAIf,KAAK,GAAGgB,OAAO,GAAGnB,KAAK,CAAC,KAAKG,KAAN,EAAae,MAAb,CAAR,GAA+B,KAAKf,KAAvD;AACA,QAAIC,MAAM,GAAGe,OAAO,GAAGnB,KAAK,CAAC,KAAKI,MAAN,EAAcc,MAAd,CAAR,GAAgC,KAAKd,MAAzD;AAEA,WAAO,CAAED,KAAF,EAASC,MAAT,CAAP;AACH,GAND;;AAQAH,EAAAA,IAAI,CAACQ,MAAL,GAAc,SAASA,MAAT,CAAiBW,IAAjB,EAAuBC,IAAvB,EAA6B;AACvC,QAAItB,OAAO,CAACqB,IAAD,CAAX,EAAmB;AACf,UAAIA,IAAI,YAAYnB,IAApB,EAA0B;AACtB,eAAOmB,IAAP;AACH,OAFD,MAEO,IAAIE,SAAS,CAACC,MAAV,KAAqB,CAArB,IAA0BH,IAAI,CAACG,MAAL,KAAgB,CAA9C,EAAiD;AACpD,eAAO,IAAItB,IAAJ,CAASmB,IAAI,CAAC,CAAD,CAAb,EAAkBA,IAAI,CAAC,CAAD,CAAtB,CAAP;AACH;;AAED,aAAO,IAAInB,IAAJ,CAASmB,IAAT,EAAeC,IAAf,CAAP;AACH;AACJ,GAVD;;AAYAV,EAAAA,eAAe,CAACC,IAAhB,CAAqBY,GAArB,GAA2B,YAAY;AACnC,WAAO,IAAIvB,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAP;AACH,GAFD;;AAIAO,EAAAA,MAAM,CAACiB,gBAAP,CAAyBxB,IAAzB,EAA+BU,eAA/B;AAEA,SAAOV,IAAP;AACH,CAjDW,CAiDVH,aAAa,CAACD,YAAD,EAAe,CAAE,OAAF,EAAW,QAAX,CAAf,CAjDH,CAAZ;;AAmDA,eAAeI,IAAf","sourcesContent":["import HasObservers from '../core/has-observers';\nimport withAccessors from '../mixins/with-accessors';\nimport { defined, round } from '../util';\n\n\nvar Size = (function (superclass) {\n    function Size(width, height) {\n        superclass.call(this);\n\n        this.width = width || 0;\n        this.height = height || 0;\n    }\n\n    if ( superclass ) Size.__proto__ = superclass;\n    Size.prototype = Object.create( superclass && superclass.prototype );\n    Size.prototype.constructor = Size;\n\n    var staticAccessors = { ZERO: { configurable: true } };\n\n    Size.prototype.equals = function equals (other) {\n        return other && other.width === this.width && other.height === this.height;\n    };\n\n    Size.prototype.clone = function clone () {\n        return new Size(this.width, this.height);\n    };\n\n    Size.prototype.toArray = function toArray (digits) {\n        var doRound = defined(digits);\n        var width = doRound ? round(this.width, digits) : this.width;\n        var height = doRound ? round(this.height, digits) : this.height;\n\n        return [ width, height ];\n    };\n\n    Size.create = function create (arg0, arg1) {\n        if (defined(arg0)) {\n            if (arg0 instanceof Size) {\n                return arg0;\n            } else if (arguments.length === 1 && arg0.length === 2) {\n                return new Size(arg0[0], arg0[1]);\n            }\n\n            return new Size(arg0, arg1);\n        }\n    };\n\n    staticAccessors.ZERO.get = function () {\n        return new Size(0, 0);\n    };\n\n    Object.defineProperties( Size, staticAccessors );\n\n    return Size;\n}(withAccessors(HasObservers, [ \"width\", \"height\" ])));\n\nexport default Size;\n"]},"metadata":{},"sourceType":"module"}