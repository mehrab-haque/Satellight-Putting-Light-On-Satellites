{"ast":null,"code":"import * as easingFunctions from './easing-functions';\nimport { limitValue, now } from '../util';\nimport { animationFrame, Class } from '../common';\nimport AnimationFactory from './animation-factory';\n\nvar Animation = function (Class) {\n  function Animation(element, options) {\n    Class.call(this);\n    this.options = Object.assign({}, this.options, options);\n    this.element = element;\n  }\n\n  if (Class) Animation.__proto__ = Class;\n  Animation.prototype = Object.create(Class && Class.prototype);\n  Animation.prototype.constructor = Animation;\n  var prototypeAccessors = {\n    options: {\n      configurable: true\n    }\n  };\n\n  Animation.create = function create(type, element, options) {\n    return AnimationFactory.current.create(type, element, options);\n  };\n\n  prototypeAccessors.options.get = function () {\n    return this._options || {\n      duration: 500,\n      easing: \"swing\"\n    };\n  };\n\n  prototypeAccessors.options.set = function (value) {\n    this._options = value;\n  };\n\n  Animation.prototype.setup = function setup() {};\n\n  Animation.prototype.step = function step() {};\n\n  Animation.prototype.play = function play() {\n    var this$1 = this;\n    var options = this.options;\n    var duration = options.duration;\n    var delay = options.delay;\n    if (delay === void 0) delay = 0;\n    var easing = easingFunctions[options.easing];\n    var start = now() + delay;\n    var finish = start + duration;\n\n    if (duration === 0) {\n      this.step(1);\n      this.abort();\n    } else {\n      setTimeout(function () {\n        var loop = function () {\n          if (this$1._stopped) {\n            return;\n          }\n\n          var wallTime = now();\n          var time = limitValue(wallTime - start, 0, duration);\n          var position = time / duration;\n          var easingPosition = easing(position, time, 0, 1, duration);\n          this$1.step(easingPosition);\n\n          if (wallTime < finish) {\n            animationFrame(loop);\n          } else {\n            this$1.abort();\n          }\n        };\n\n        loop();\n      }, delay);\n    }\n  };\n\n  Animation.prototype.abort = function abort() {\n    this._stopped = true;\n  };\n\n  Animation.prototype.destroy = function destroy() {\n    this.abort();\n  };\n\n  Object.defineProperties(Animation.prototype, prototypeAccessors);\n  return Animation;\n}(Class);\n\nexport default Animation;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/node_modules/@progress/kendo-drawing/dist/es/animations/animation.js"],"names":["easingFunctions","limitValue","now","animationFrame","Class","AnimationFactory","Animation","element","options","call","Object","assign","__proto__","prototype","create","constructor","prototypeAccessors","configurable","type","current","get","_options","duration","easing","set","value","setup","step","play","this$1","delay","start","finish","abort","setTimeout","loop","_stopped","wallTime","time","position","easingPosition","destroy","defineProperties"],"mappings":"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","sourcesContent":["import * as easingFunctions from './easing-functions';\nimport { limitValue, now } from '../util';\nimport { animationFrame, Class } from '../common';\nimport AnimationFactory from './animation-factory';\n\nvar Animation = (function (Class) {\n    function Animation(element, options) {\n        Class.call(this);\n\n        this.options = Object.assign({}, this.options, options);\n        this.element = element;\n    }\n\n    if ( Class ) Animation.__proto__ = Class;\n    Animation.prototype = Object.create( Class && Class.prototype );\n    Animation.prototype.constructor = Animation;\n\n    var prototypeAccessors = { options: { configurable: true } };\n\n    Animation.create = function create (type, element, options) {\n        return AnimationFactory.current.create(type, element, options);\n    };\n\n    prototypeAccessors.options.get = function () {\n        return this._options || {\n            duration: 500,\n            easing: \"swing\"\n        };\n    };\n\n    prototypeAccessors.options.set = function (value) {\n        this._options = value;\n    };\n\n    Animation.prototype.setup = function setup () {};\n    Animation.prototype.step = function step () {};\n\n    Animation.prototype.play = function play () {\n        var this$1 = this;\n\n        var options = this.options;\n        var duration = options.duration;\n        var delay = options.delay; if ( delay === void 0 ) delay = 0;\n        var easing = easingFunctions[options.easing];\n        var start = now() + delay;\n        var finish = start + duration;\n\n        if (duration === 0) {\n            this.step(1);\n            this.abort();\n        } else {\n            setTimeout(function () {\n                var loop = function () {\n                    if (this$1._stopped) {\n                        return;\n                    }\n\n                    var wallTime = now();\n\n                    var time = limitValue(wallTime - start, 0, duration);\n                    var position = time / duration;\n                    var easingPosition = easing(position, time, 0, 1, duration);\n\n                    this$1.step(easingPosition);\n\n                    if (wallTime < finish) {\n                        animationFrame(loop);\n                    } else {\n                        this$1.abort();\n                    }\n                };\n\n                loop();\n            }, delay);\n        }\n    };\n\n    Animation.prototype.abort = function abort () {\n        this._stopped = true;\n    };\n\n    Animation.prototype.destroy = function destroy () {\n        this.abort();\n    };\n\n    Object.defineProperties( Animation.prototype, prototypeAccessors );\n\n    return Animation;\n}(Class));\n\nexport default Animation;\n"]},"metadata":{},"sourceType":"module"}