{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Md. Mehrab Haque\\\\Desktop\\\\satellight\\\\src\\\\components\\\\MapView.js\";\nimport React, { useState, createRef, useRef, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport { getSatelliteInfo } from \"tle.js\";\n\nfunction getNormalizedCoord(coord, zoom) {\n  const y = coord.y;\n  let x = coord.x;\n  const tileRange = 1 << zoom;\n\n  if (y < 0 || y >= tileRange) {\n    return null;\n  }\n\n  if (x < 0 || x >= tileRange) {\n    x = (x % tileRange + tileRange) % tileRange;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n\nconst MapView = forwardRef((props, ref) => {\n  var map, marker, infoWindow, polyLine;\n  const containerRef = useRef();\n  useEffect(() => {\n    map = new window.google.maps.Map(containerRef.current, {\n      center: {\n        lat: 50,\n        lng: 50\n      },\n      zoom: 5,\n      streetViewControl: false,\n      mapTypeControlOptions: {\n        mapTypeIds: [window.google.maps.MapTypeId.ROADMAP, window.google.maps.MapTypeId.HYBRID]\n      }\n    });\n    const icon = {\n      url: props.data.icon_url,\n      scaledSize: {\n        width: 40,\n        height: 40\n      }\n    };\n    let iconMarker = new window.google.maps.MarkerImage(props.data.icon_url, null, new window.google.maps.Point(0, 0),\n    /* origin is 0,0 */\n    new window.google.maps.Point(30, 30),\n    /* anchor is bottom center of the scaled image */\n    new window.google.maps.Size(60, 50));\n    marker = new window.google.maps.Marker({\n      position: map.center,\n      icon: iconMarker,\n      title: \"Hello World!\"\n    });\n    marker.setMap(map);\n  }, []);\n  useImperativeHandle(ref, () => ({}));\n  useEffect(() => {}, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  });\n});\nexport default MapView;","map":{"version":3,"sources":["C:/Users/Md. Mehrab Haque/Desktop/satellight/src/components/MapView.js"],"names":["React","useState","createRef","useRef","useEffect","forwardRef","useImperativeHandle","getSatelliteInfo","getNormalizedCoord","coord","zoom","y","x","tileRange","MapView","props","ref","map","marker","infoWindow","polyLine","containerRef","window","google","maps","Map","current","center","lat","lng","streetViewControl","mapTypeControlOptions","mapTypeIds","MapTypeId","ROADMAP","HYBRID","icon","url","data","icon_url","scaledSize","width","height","iconMarker","MarkerImage","Point","Size","Marker","position","title","setMap"],"mappings":"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","sourcesContent":["import React,{useState,createRef,useRef,useEffect,forwardRef, useImperativeHandle} from 'react'\r\nimport { getSatelliteInfo } from \"tle.js\";\r\n\r\nfunction getNormalizedCoord(coord, zoom) {\r\n        const y = coord.y;\r\n        let x = coord.x;\r\n        const tileRange = 1 << zoom;\r\n        if (y < 0 || y >= tileRange) {\r\n          return null;\r\n        }\r\n        if (x < 0 || x >= tileRange) {\r\n          x = ((x % tileRange) + tileRange) % tileRange;\r\n        }\r\n        return {\r\n          x: x,\r\n          y: y\r\n        };\r\n      }\r\n\r\n\r\nconst MapView=forwardRef((props,ref)=>{\r\n\r\n  var map,marker,infoWindow,polyLine\r\n  const containerRef=useRef()\r\n\r\n  useEffect(()=>{\r\n    map = new window.google.maps.Map(containerRef.current, {\r\n      center: {\r\n        lat: 50,\r\n        lng: 50\r\n      },\r\n      zoom: 5,\r\n      streetViewControl: false,\r\n      mapTypeControlOptions: {\r\n        mapTypeIds: [window.google.maps.MapTypeId.ROADMAP,window.google.maps.MapTypeId.HYBRID]\r\n      }\r\n    });\r\n\r\n    const icon = { url: props.data.icon_url, scaledSize: { width: 40, height: 40 } };\r\n    let iconMarker = new window.google.maps.MarkerImage(\r\n                      props.data.icon_url,\r\n                      null,\r\n                      new window.google.maps.Point(0, 0), /* origin is 0,0 */\r\n                      new window.google.maps.Point(30, 30), /* anchor is bottom center of the scaled image */\r\n                      new window.google.maps.Size(60, 50)\r\n                  );\r\n\r\n     marker = new window.google.maps.Marker({\r\n        position: map.center,\r\n        icon:iconMarker,\r\n        title:\"Hello World!\"\r\n    });\r\n    marker.setMap(map);\r\n\r\n  },[])\r\n\r\n\r\n  useImperativeHandle(ref, () => ({\r\n\r\n }));\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n  },[])\r\n\r\n  return(\r\n    <div ref={containerRef} style={{ width: \"100%\", height: \"100%\" }}/>\r\n  )\r\n})\r\n\r\nexport default MapView\r\n"]},"metadata":{},"sourceType":"module"}